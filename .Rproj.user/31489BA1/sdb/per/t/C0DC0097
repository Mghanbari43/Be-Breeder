{
    "collab_server" : "",
    "contents" : "##################\n### Be-Breeder ###\n##################\n  \n  library(shiny)\n  library(shinydashboard)\n  library(Matrix)\n  library(lme4)\n  library(lmerTest)\n  #library(rgl)\n  library(agricolae)\n  library(rrBLUP)\n  library(adegenet)\n  library(poppr)\n  library(ape)\n  library(matrixcalc)\n  library(data.table)\n  #library(PopGenReport)\n  library(cluster)\n  library(fpc)\n  library(stringr)\n  \n  source(\"G.matrix.R\")\n  source(\"raw.data.R\")\n  source(\"popgen.R\")\n  \n  ######################################################################################################################################################################################\n  \n  \n  header <- dashboardHeader(title = \"Be-Breeder\",\n                            titleWidth = 250)\n  \n  ######################################################################################################################################################################################\n  \n  sidebar <- dashboardSidebar(\n    tags$head(tags$style(HTML('\n                              .main-header .logo {\n                              font-family: \"Georgia\", Times, \"Times New Roman\", serif;\n                              font-weight: bold;\n                              font-size: 30px;\n                              }\n                              '))),\n    width = 250,\n    sidebarUserPanel(\"User Menu:\"),\n    sidebarMenu(\n      id = \"tabs\",\n      menuItem(\"Start\", tabName = \"start\",icon = icon(\"cogs\")),\n      menuItem(\"Learning\",icon = icon(\"graduation-cap\"),\n               menuSubItem(\"Inbreeding Effect\", tabName = \"Lear1\", icon = icon(\"angle-double-right\")),\n               menuSubItem(\"Qualitative x Quantitative\", tabName = \"Lear3\", icon = icon(\"angle-double-right\")),\n               menuSubItem(\"Progeny Size\", tabName = \"Lear4\", icon = icon(\"angle-double-right\")),\n               menuSubItem(\"Selection Effect (HWE)\", tabName = \"Lear5\", icon = icon(\"angle-double-right\")),\n               menuSubItem(\"Genetic Variance Components\", tabName = \"Lear6\", icon = icon(\"angle-double-right\")),\n               menuSubItem(\"Constructing Synthetic Populations\", tabName = \"Lear7\", icon = icon(\"angle-double-right\")),\n               menuItem(\"Recurrent Selection\", icon = icon(\"angle-double-right\"),\n                        menuSubItem(\"Intrapopulation\",tabName = \"Lear8\", icon = icon(\"angle-double-right\")),\n                        menuSubItem(\"Reciprocal\",tabName = \"Lear81\", icon = icon(\"angle-double-right\"))),\n               menuItem(\"Hybrids (Jenkins)\",icon = icon(\"angle-double-right\"),\n                        menuSubItem(\"Hybrid Prediction\", tabName = \"Lear91\", icon = icon(\"angle-double-right\")),\n                        menuSubItem(\"Number of Hybrids\", tabName = \"Lear92\", icon = icon(\"angle-double-right\"))),\n               menuSubItem(\"Genotype x Environment\", tabName = \"Lear10\", icon = icon(\"angle-double-right\")),\n               menuSubItem(\"Heterosis\", tabName = \"Lear11\", icon = icon(\"angle-double-right\")),\n               menuSubItem(\"Tester Effect\", tabName = \"Lear12\", icon = icon(\"angle-double-right\")),\n               menuSubItem(\"Genetic Drift\", tabName = \"Lear13\", icon = icon(\"angle-double-right\")),\n               menuSubItem(\"Indirect Selection\", tabName = \"Lear14\", icon = icon(\"angle-double-right\")),\n               menuSubItem(\"Residual Effect on Selection\", tabName = \"Lear15\", icon = icon(\"angle-double-right\")),\n               menuSubItem(\"Replicates vs Population size\", tabName = \"Lear16\", icon = icon(\"angle-double-right\")),\n               menuSubItem(\"Economics in Plant Breeding\", tabName = \"Lear17\", icon = icon(\"angle-double-right\")),\n               menuSubItem(\"Linkage Disequilibrium (LD)\", tabName = \"Lear18\", icon = icon(\"angle-double-right\")),\n               menuSubItem(\"Cycles to Reduce LD\", tabName = \"Lear19\", icon = icon(\"angle-double-right\"))\n               \n      ),\n      menuItem(\"Phenotypic Breeding\", icon = icon(\"leaf\"), \n               menuItem(\"Experimental Design Analysis\", icon = icon(\"angle-double-right\"),\n                        menuSubItem(\"DataSet\", tabName = \"subitem11\", icon = icon(\"th\")),\n                        menuSubItem(\"Statistical Model\", tabName = \"subitem12\")),\n               menuItem(\"Diallel Analysis\", icon = icon(\"angle-double-right\"),\n                        menuSubItem(\"Diallel File\",tabName =\"subitem131\"),\n                        menuItem(\"Diallel Analysis\",icon = icon(\"venus-mars\"),\n                                 menuSubItem(\"Half Diallel\",tabName =\"subitem132\"),\n                                 menuSubItem(\"Full Diallel\",tabName =\"subitem133\"))),\n               menuItem(\"Index Selection\", icon = icon(\"angle-double-right\"),\n                        menuSubItem(\"Index File\",tabName =\"subitem141\"),\n                        menuSubItem(\"Index Analysis\",tabName =\"subitem142\")),\n               menuItem(\"Path Analysis\",icon = icon(\"angle-double-right\"),\n                        menuSubItem(\"Trait File\",tabName =\"subitem161\"),\n                        menuSubItem(\"Path Analysis\",tabName =\"subitem162\")),\n               menuItem(\"Biplot Analysis\",icon = icon(\"angle-double-right\"),\n                        menuSubItem(\"DataSet\",tabName =\"subitem171\"),\n                        menuItem(\"GE Biplot\",icon = icon(\"angle-double-right\"),\n                        menuSubItem(\"Biplot Analysis\",tabName =\"subitem172\"),\n                        menuSubItem(\"Biplot Graphic\",tabName =\"subitem173\")),\n                        menuItem(\"GE Cluster\",icon = icon(\"angle-double-right\"),\n                        menuSubItem(\"Cluster Analysis\",tabName =\"subitem174\"),\n                        menuSubItem(\"Cluster Graphic\",tabName =\"subitem175\")))\n      ),\n      menuItem(\"Molecular Breeding\", icon = icon(\"sitemap\"),\n               menuItem(\"Genotyping Data\",icon = icon(\"wrench\"),\n                        menuItem(\"Quality Control\", icon = icon(\"angle-double-right\"),\n                        menuSubItem(\"Sample Set\",tabName = \"mol121\", icon = icon(\"angle-double-right\")),\n                        menuSubItem(\"HapMap\",tabName = \"mol1212\", icon = icon(\"angle-double-right\")),\n                        menuSubItem(\"Raw Data\",tabName = \"mol122\", icon = icon(\"angle-double-right\"))),\n                        menuItem(\"Kinship Matrix\", icon = icon(\"angle-double-right\"),\n                        menuSubItem(\"Z Matrix\",tabName = \"mol11\", icon = icon(\"angle-double-right\")),\n                        menuSubItem(\"Kinship Matrix\", tabName = \"mol13\", icon = icon(\"angle-double-right\")))),\n               menuItem(\"Genomic Selection (GS)\",icon = icon(\"angle-double-right\"),\n                        menuItem(\"GS analysis\",icon = icon(\"angle-double-right\"),\n                        menuSubItem(\"Phenotypic file\", tabName = \"mol21\", icon = icon(\"angle-double-right\")),\n                        menuSubItem(\"Z Matrix\", tabName = \"mol22\", icon = icon(\"angle-double-right\")),\n                        menuSubItem(\"rrBLUP\", tabName = \"mol23\", icon = icon(\"angle-double-right\"))),\n                        menuItem(\"Prediction and Selection\",icon = icon(\"angle-double-right\"),\n                                 menuSubItem(\"Marker effect\", tabName = \"mol241\", icon = icon(\"angle-double-right\")),\n                                 menuSubItem(\"Z Matrix\", tabName = \"mol242\", icon = icon(\"angle-double-right\")),\n                                 menuSubItem(\"Selection\", tabName = \"mol243\", icon = icon(\"angle-double-right\")))),\n               menuItem(\"Genomic Association (GWAS)\",icon = icon(\"angle-double-right\"),\n                        menuSubItem(\"Phenotypic file\", tabName = \"mol31\", icon = icon(\"angle-double-right\")),\n                        menuSubItem(\"HapMap|t(Z)\", tabName = \"mol32\", icon = icon(\"angle-double-right\")),\n                        menuItem(\"GWAS\",icon = icon(\"angle-double-right\"),\n                                 menuSubItem(\"Scores\", tabName = \"mol33\", icon = icon(\"angle-double-right\")),\n                                 menuSubItem(\"Manhattan plot\", tabName = \"mol34\", icon = icon(\"angle-double-right\")))),\n               menuItem(\"Diversity Analysis\",icon = icon(\"angle-double-right\"),\n                        menuItem(\"Genetic Diversity\",icon = icon(\"angle-double-right\"),\n                        menuSubItem(\"DataSet\",tabName = \"mol41\",icon = icon(\"angle-double-right\")),\n                        menuSubItem(\"Diversity Summary\",tabName = \"mol42\",icon = icon(\"angle-double-right\")),\n                        menuSubItem(\"Graphs\",tabName = \"mol43\",icon = icon(\"angle-double-right\"))),\n                        menuItem(\"Population Genetics\",icon = icon(\"angle-double-right\"),\n                                 menuSubItem(\"Subpopulation Groups\",tabName = \"mol51\",icon = icon(\"angle-double-right\")),\n                                 menuSubItem(\"Z Matrix\",tabName = \"mol52\",icon = icon(\"angle-double-right\")),\n                                 menuSubItem(\"PopGen Analysis\",tabName = \"mol53\",icon = icon(\"angle-double-right\"))))\n               ),\n      menuItem(\"Information\", icon = icon(\"info-circle\"),\n               menuSubItem(\"About Be-Breeder\", tabName = \"info1\", icon = icon(\"angle-double-right\")),\n               menuSubItem(\"Citation Be-Breeder\", tabName = \"info2\", icon = icon(\"angle-double-right\")),\n               menuSubItem(\"Team Contact\", tabName = \"info3\", icon = icon(\"angle-double-right\"))\n      )\n      ,\n      htmlTemplate(\"flagC.html\",align = \"center\")\n      \n    )\n    )\n  \n  ######################################################################################################################################################################################\n  \n  body <- dashboardBody(\n    \n    tabItems(\n# #####################################################################################################################################################################################\n      \n      tabItem(\"start\", box(status = \"primary\", height = 650, width = 600, align = \"center\",\n                           \n                           fluidRow(\n                             infoBox(hr(), \"Home Page\",icon=icon(\"home\"), fill = TRUE, color = \"aqua\",\n                                     href = \"http://www.genetica.esalq.usp.br/alogamas/index2.html\"\n                             ),\n                             infoBox(hr(), \"USP Page\",icon=icon(\"users\"), fill = TRUE, color = \"aqua\",\n                                     href = \"http://www4.esalq.usp.br/\"\n                             )\n                             ,\n                             infoBox(hr(), \"Twitter Page\",icon=icon(\"twitter\"), fill = TRUE, color = \"aqua\",\n                                     href = \"https://twitter.com/Alogamas_ESALQ?ref_src=twsrc%5Etfw\"\n                             )\n                           ),img(src=\"Allogamous.jpg\", height = 500, width = 750, align = \"center\")\n      )\n      ),\n      \n# #####################################################################################################################################################################################\n      \n      tabItem(\"Lear1\",\n              \n              fluidPage(\n                titlePanel(\"Inbreeding Effect\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    selectInput(\"Lear1.1\", \"Self-Generation:\",\n                                choices = c(\"F1\",\"F2\",\"F3\",\"F4\",\"F5\",\"F6\",\"F7\",\"F8\",\"F9\",\"F.inf\"),width = 150),\n                    sliderInput(\"Lear1.2\",\"F Wright\",0,1,0),\n                    verbatimTextOutput(\"cont.Lear.1.0\"),\n                    img(src='Lear1.jpg',height = 160, width = 130)\n                  ),\n                  mainPanel(plotOutput(\"cont.Lear.1\"))\n                ))),\n      \n      \n# ######################################################################################################################################################################################\n      \n      tabItem(\"Lear3\",\n              fluidPage(\n                titlePanel(\"Qualitative x Quantitative\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    sliderInput(\"Lear3.1\", \"Number of Dominance Genes\",0,30,0,step =1),\n                    sliderInput(\"Lear3.2\", \"Number of Partial Dominance Genes\",0,30,0,step =1),\n                    sliderInput(\"Lear3.3\", \"Number of Additive Genes\",0,30,0,step =1)\n                  ),\n                  mainPanel(plotOutput(\"cont.Lear.3\"))\n                ))),\n      \n# ######################################################################################################################################################################################\n      \n      tabItem(\"Lear4\",\n              fluidPage(\n                titlePanel(\"Progeny Size\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    numericInput(\"Lear4.1\",\"Number of Genes (n)\",min = 0,value = 0),\n                    numericInput(\"Lear4.2\",\"Self-Generation (m)\",min = 0,value = 0),\n                    sliderInput(\"Lear4.3\", \"Precision (P)\",0,1,0.95),\n                    img(src='Lear4.jpg',height = 130, width = 120)\n                    \n                  ),\n                  verbatimTextOutput(\"cont.Lear.4\")))),\n      \n# ######################################################################################################################################################################################\n      \n      tabItem(\"Lear5\",\n              fluidPage(\n                titlePanel(\"Selection Effect (HWE)\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    numericInput(\"Lear5.2\",\"Number of AA genotype\",min = 0,value = 0),\n                    numericInput(\"Lear5.3\",\"Number of Aa genotype\",min = 0,value = 0),\n                    numericInput(\"Lear5.4\",\"Number of aa genotype\",min = 0,value = 0),\n                    sliderInput(\"Lear5.41\",\"Rate of Inbreeding\",0,1,0),\n                    numericInput(\"Lear5.5\",\"Yield of AA\",min = 0,value = 0),\n                    numericInput(\"Lear5.6\",\"Yield of Aa\",min = 0,value = 0),\n                    numericInput(\"Lear5.7\",\"Yield of aa\",min = 0,value = 0),\n                    sliderInput(\"Lear5.11\", \"Herdability\",0,1,1),\n                    numericInput(\"Lear5.8\",\"Number of AA selected\",min = 0,value = 0),\n                    numericInput(\"Lear5.9\",\"Number of Aa selected\",min = 0,value = 0),\n                    numericInput(\"Lear5.10\",\"Number of aa selected\",min = 0,value = 0),\n                    img(src='Lear5.jpg',height = 160, width = 180)\n                  ),\n                  verbatimTextOutput(\"cont.Lear.5\")))),\n      \n# ######################################################################################################################################################################################\n      \n      tabItem(\"Lear6\",\n              fluidPage(\n                titlePanel(\"Genetic Variance Components\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    sliderInput(\"Lear6.2\",\"Frequency of allele (p)\",0,1,0),\n                    sliderInput(\"Lear6.1\",\"Dominance Effect (d)\",0,2.5,0),\n                    sliderInput(\"Lear6.3\",\"Additive Effect (a)\",0,1,0),\n                    verbatimTextOutput(\"cont.Lear.6.1\"),\n                    img(src='Lear6.1.jpg',height = 200, width = 200)\n                  ),\n                  mainPanel(plotOutput(\"cont.Lear.6\"))\n                ))),\n      \n# ######################################################################################################################################################################################\n      \n      tabItem(\"Lear7\",\n              fluidPage(\n                titlePanel(\"Constructing Synthetic Populations\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    sliderInput(\"Lear7.1\",\"Number of alleles\",0,10,10,step = 1),\n                    textInput(\"Lear7.2\",\"Frequency of each allele (Sum = 1)\",value = \"0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1\"),\n                    img(src='Lear7.jpg',height = 150, width = 165)\n                  ),\n                  verbatimTextOutput(\"cont.Lear.7\")\n                ))),\n      \n# ######################################################################################################################################################################################\n      \n      tabItem(\"Lear8\",\n              fluidPage(\n                titlePanel(\"Intrapopulation Recurrent Selection\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    radioButtons('Lear8.1', '| Evaluation/Recombination | c | D1 | Ne |',\n                                 c(\"| HS/HS | 1/4 | 0 |  4  |\"='MI/MI',\n                                   \"| HS/S1 | 1/2 | 0 |  1  |\"='MI/S1',\n                                   \"| FS/FS | 1/2 | 0 |  2  |\"='IC/IC',\n                                   \"| FS/S1 | 1/2 | 0 |  1  |\"='IC/S1',\n                                   \"| S1/S1 |  1  |1/2|  1  |\"='S1/S1',\n                                   \"| S2/S2 | 3/2 |5/4| 2/3 |\"='S2/S2'),\n                                 'MI/MI'),\n                    \n                    numericInput(\"Lear8.2\",\"Number of Progenies Evaluated\",min = 0,value = 0),\n                    sliderInput(\"Lear8.3\",\"Inbreeding Depression (DE)\",0,1,0),\n                    sliderInput(\"Lear8.4\",\"Herdability\",0,1,0),\n                    sliderInput(\"Lear8.5\",\"Intensity of Selection (i)\",0,50,0,step = 1),\n                    sliderInput(\"Lear8.6\",\"Cycle Interval (year)\",0.2,7,1,step = 0.1),\n                    img(src='Lear8.jpg',width = 200,height = 90)\n                  ),\n                  \n                  verbatimTextOutput(\"cont.Lear.8\")))),\n# ######################################################################################################################################################################################\n      \n      tabItem(\"Lear81\",\n              fluidPage(\n                titlePanel(\"Reciprocal Recurrent Selection\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    radioButtons('Lear81.1', '| Evaluation/Recombination | c | Ne |',\n                                 c(\"| HS/HS | 1/8 | 4 |\"='MI/MI',\n                                   \"| HS/S1 | 1/4 | 1 |\"='MI/S1',\n                                   \"| TC/MI | 1/16| 4 |\"='TC/MI',\n                                   \"| FS/S1 | 1/4 | 1 |\"='IC/S1'),\n                                 'MI/MI'),\n                    \n                    numericInput(\"Lear81.21\",\"Number of Progenies - Group 1\",min = 0,value = 0),\n                    numericInput(\"Lear81.22\",\"Number of Progenies - Group 2\",min = 0,value = 0),\n                    \n                    sliderInput(\"Lear81.41\",\"Herdability - Group 1\",0,1,0),\n                    sliderInput(\"Lear81.42\",\"Herdability - Group 2\",0,1,0),\n                    \n                    sliderInput(\"Lear81.51\",\"Intensity of Selection (i1)\",0,50,0,step = 1),\n                    sliderInput(\"Lear81.52\",\"Intensity of Selection (i2)\",0,50,0,step = 1),\n                    \n                    sliderInput(\"Lear81.6\",\"Cycle Interval (year)\",0.2,7,1,step = 0.1),\n                    \n                    img(src='Lear81.jpg',width = 200,height = 90)\n                  ),\n                  \n                  verbatimTextOutput(\"cont.Lear.8.1\")))),\n# ######################################################################################################################################################################################\n      \n      tabItem(\"Lear91\",\n              fluidPage(\n                titlePanel(\"Hybrid Prediction\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    fileInput('file.L9', 'Choose File:',\n                              accept=c('text/csv', \n                                       'text/comma-separated-values,text/plain', \n                                       '.csv',\".txt\")),\n                    tags$hr(),\n                    \n                    checkboxInput('header.L9', 'Header', FALSE),\n                    radioButtons('sep.L9', 'Separator',\n                                 c(Comma=',',\n                                   Semicolon=';',\n                                   Tab='\\t'),\n                                 ','),\n                    radioButtons('quote.L9', 'Quote',\n                                 c(None='',\n                                   'Double Quote'='\"',\n                                   'Single Quote'=\"'\"),\n                                 ''),\n                    selectInput(\"Lear91.out\", \"Look Options:\",\n                                choices = c(\"Table\",\n                                            \"Three-way Cross Hybrids Prediction\",\n                                            \"Double Cross Hybrids Prediction\")),\n                    checkboxInput(\"ex.L.9\",\"Example\", FALSE),\n                    img(src='Lear91.jpg',width = 200,height = 100)\n                  ),\n                  \n                  verbatimTextOutput(\"cont.Lear.9.1\")\n                  \n                )\n              )),\n      \n      tabItem(\"Lear92\",\n              fluidPage(\n                titlePanel(\"Number of Hybrids\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    selectInput(\"Lear9.2.1\", \"Population Structure\",\n                                choices = c(\"One Heterotic Group\",\n                                            \"Two Heterotic Group\")),\n                    numericInput(\"Lear9.2.2\",\"Number of Lines\",min = 0,value = 0),\n                    numericInput(\"Lear9.2.3\",\"Number of Lines in Group 1\",min = 0,value = 0),\n                    numericInput(\"Lear9.2.4\",\"Number of Lines in Group 2\",min = 0,value = 0),\n                    img(src='Lear92.jpg',height = 250, width = 200)\n                    \n                  ),\n                  verbatimTextOutput(\"cont.Lear.9.2\"))\n              )),\n      \n# ######################################################################################################################################################################################\n      \n      tabItem(\"Lear10\",\n              fluidPage(\n                titlePanel(\"Genotype x Environment\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    verbatimTextOutput(\"cont.Lear.10.1\"),\n                    sliderInput(\"Lear10.7\",\"Coefficient of Variation (CV)\",5,20,5),\n                    sliderInput(\"Lear10.8\",\"Number of Repetitions (r)\",1,4,1,step = 1),\n                    sliderInput(\"Lear10.1\",\"Yield of Genotype 1 in Environment 1\",0,5,0),\n                    sliderInput(\"Lear10.2\",\"Yield of Genotype 1 in Environment 2\",0,5,0),\n                    sliderInput(\"Lear10.3\",\"Yield of Genotype 2 in Environment 1\",0,5,0),\n                    sliderInput(\"Lear10.4\",\"Yield of Genotype 2 in Environment 2\",0,5,0),\n                    sliderInput(\"Lear10.5\",\"Yield of Genotype 3 in Environment 1\",0,5,0),\n                    sliderInput(\"Lear10.6\",\"Yield of Genotype 3 in Environment 2\",0,5,0)\n                  ),\n                  mainPanel(plotOutput(\"cont.Lear.10.2\")))\n              )),\n      \n# ######################################################################################################################################################################################\n      \n      tabItem(\"Lear11\",\n              fluidPage(\n                titlePanel(\"Heterosis\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    sliderInput(\"Lear11.1\",\"Number of Genes\",0,100,0, step = 10),\n                    sliderInput(\"Lear11.2\",\"Dominance Deviation (d)\",0,1,0, step = 0.1),\n                    sliderInput(\"Lear11.3\",\"Genetic Divergence\",0,1,0, step = 0.1),\n                    img(src='Lear11.jpg',height = 200, width = 150)\n                  ),\n                  verbatimTextOutput(\"cont.Lear.11\"))\n              )),\n# #####################################################################################################################################################################################      \n      \n      tabItem(\"Lear12\",\n              fluidPage(\n                titlePanel(\"Tester Effect\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    sliderInput(\"Lear12.1\",\"Frequency of allele (p)\",0,1,0),\n                    sliderInput(\"Lear12.2\",\"r\",0,1,0),\n                    sliderInput(\"Lear12.3\",\"Additive Effect (a)\",0,1,0),\n                    sliderInput(\"Lear12.4\",\"Dominance Effect (d)\",0,2,0, step = 0.1),\n                    sliderInput(\"Lear12.5\",\"Inbreeding coefficient (F)\",0,1,0),\n                    verbatimTextOutput(\"cont.Lear.12.1\")\n                    #img(src='Lear12.jpg',height = 200, width = 150)\n                  ),\n                  mainPanel(plotOutput(\"cont.Lear.12\"))\n              ))),\n# #####################################################################################################################################################################################      \n\n      tabItem(\"Lear13\",\n              fluidPage(\n                titlePanel(\"Genetic Drift\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    sliderInput(\"Lear13.1\",\"Frequency of allele a (q)\",0,1,0),\n                    sliderInput(\"Lear13.2\",\"Selection Intensity\",0,1,0.1),\n                    verbatimTextOutput(\"cont.Lear.13.1\")\n                    #img(src='Lear13.jpg',height = 200, width = 150)\n                  ),\n                  mainPanel(plotOutput(\"cont.Lear.13\"))\n                ))),\n\n# #####################################################################################################################################################################################      \n\n      tabItem(\"Lear14\",\n              fluidPage(\n                titlePanel(\"Indirect Selection\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    sliderInput(\"Lear14.1\",\"Herdability of trait 'x'\",0,1,0),\n                    sliderInput(\"Lear14.2\",\"Correlation between 'x' and 'y'\",0,1,0),\n                    numericInput(\"Lear14.3\",\"Number of individuals evaluated\",min = 0,value = 10),\n                    numericInput(\"Lear14.4\",\"Number of individuals selected\",min = 0,value = 0),\n                    verbatimTextOutput(\"cont.Lear.14.1\")\n                    #img(src='Lear14.jpg',height = 200, width = 150)\n                  ),\n                  mainPanel(plotOutput(\"cont.Lear.14\"))\n                ))),\n\n# #####################################################################################################################################################################################\n\n      tabItem(\"Lear15\",\n              fluidPage(\n                titlePanel(\"Residual Effect on Selection\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    numericInput(\"Lear15.1\",\"Number of individuals evaluated\",min = 0,value = 10),\n                    sliderInput(\"Lear15.2\",\"Selection intensity (%)\",0,20,0),\n                    sliderInput(\"Lear15.3\",\"Heritability\",0,1,0)\n                    #img(src='Lear15.jpg',height = 200, width = 150)\n                  ),\n                    verbatimTextOutput(\"cont.Lear.15\"))\n                )),\n\n# #####################################################################################################################################################################################\n\n      tabItem(\"Lear16\",\n              fluidPage(\n                titlePanel(\"Replicates vs Population size\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    sliderInput(\"Lear16.1\",\"Number of replicates\",1,5,1),\n                    numericInput(\"Lear16.2\",\"Number of plots available\",min = 0,value = 0),\n                    numericInput(\"Lear16.3\",\"Number of genotypes selected\",min = 0,value = 0),\n                    sliderInput(\"Lear16.4\",\"Trait Heritability\",0,1,0),\n                    verbatimTextOutput(\"cont.Lear.16.1\")\n                    #img(src='Lear16.jpg',height = 200, width = 150)\n                  ),\n                  mainPanel(plotOutput(\"cont.Lear.16\"))\n                ))),\n\n# #####################################################################################################################################################################################\n\n      tabItem(\"Lear17\",\n              fluidPage(\n                titlePanel(\"Economics in Plant Breeding\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    numericInput(\"Lear17.1\",\"Number of genotypes evaluated\",min = 0,value = 10),\n                    numericInput(\"Lear17.2\",\"Number of genotypes selected\",min = 0,value = 0),\n                    sliderInput(\"Lear17.3\",\"Trait Heritability\",0,1,0),\n                    sliderInput(\"Lear17.4\",\"Number of replicates\",1,5,1),\n                    sliderInput(\"Lear17.5\",\"Time (year/cicle)\",0.2,7,0.2),\n                    numericInput(\"Lear17.6\",\"Cost to evaluate one plot (U$)\",min = 0,value = 10),\n                    verbatimTextOutput(\"cont.Lear.17.1\")\n                    #img(src='Lear17.jpg',height = 200, width = 150)\n                  ),\n                  mainPanel(plotOutput(\"cont.Lear.17\"))\n                ))),\n\n#######################################################################################################################################################################################\n\n      tabItem(\"Lear18\",\n              fluidPage(\n                titlePanel(\"Linkage Disequilibrium (LD)\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    sliderInput(\"Lear18.1\",\"Frequency of haplotype AB\",0,1,0),\n                    sliderInput(\"Lear18.2\",\"Frequency of haplotype Ab\",0,1,0),\n                    sliderInput(\"Lear18.3\",\"Frequency of haplotype aB\",0,1,0),\n                uiOutput('ui.lear18.1'),  \n                    sliderInput(\"Lear18.5\",\"Frequency of A\",0,1,0),\n                uiOutput('ui.lear18.2'),\n                    sliderInput(\"Lear18.7\",\"Frequency of B\",0,1,0),\n                uiOutput('ui.lear18.3')\n                    #img(src='Lear18.jpg',height = 200, width = 150)\n                  ),\n                  verbatimTextOutput(\"cont.Lear.18\"))\n              )),\n\n#######################################################################################################################################################################################\n\n      tabItem(\"Lear19\",\n              fluidPage(\n                titlePanel(\"Cycles to Reduce LD\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    sliderInput(\"Lear19.1\",\"Lost of LD (%)\",0,100,5),\n                    sliderInput(\"Lear19.2\",\"Recombination fraction between loci\",0,0.5,0.05),\n                    verbatimTextOutput(\"cont.Lear.19.1\")\n                    #img(src='Lear19.jpg',height = 200, width = 150)\n                  ),\n                  mainPanel(plotOutput(\"cont.Lear.19\"))\n                ))),\n\n#######################################################################################################################################################################################\n\n# Phenotipic Breeding\n      \n#######################################################################################################################################################################################\n      \n      tabItem(\"subitem11\",\n              fluidPage(\n                titlePanel(\"Uploading Files\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    fileInput('file1', 'Choose File:',\n                              accept=c('text/csv', \n                                       'text/comma-separated-values,text/plain', \n                                       '.csv',\".txt\")),\n                    tags$hr(),\n                    \n                    checkboxInput('header', 'Header', FALSE),\n                    radioButtons('sep', 'Separator',\n                                 c(Comma=',',\n                                   Semicolon=';',\n                                   Tab='\\t'),\n                                 ','),\n                    radioButtons('quote', 'Quote',\n                                 c(None='',\n                                   'Double Quote'='\"',\n                                   'Single Quote'=\"'\"),\n                                 ''),\n                    selectInput(\"table.1\", \"Look Options:\",\n                                choices = c(\"Table\",\"Data Structure\",\"Names\"),width = 150),\n                    checkboxInput(\"info.11\",\"Help\", FALSE),\n                    checkboxInput(\"ex.11\",\"Example\", FALSE)\n                  ),\n                  verbatimTextOutput(\"contents11\")\n                )\n              )\n      ),\n# #####################################################################################################################################################################################\n      tabItem(\"subitem12\", \n              \n              fluidPage(\n                titlePanel(\"Statistical Model\"),\n                sidebarLayout(\n                  sidebarPanel( \n                    checkboxInput('res.12.name', 'Sources of Variation', FALSE),\n                    textInput(\"model\",\"Type the Statistical Model\", width = 700,\n                              value = \"y~Block+Site+(1|Genotype)+(1|Genotype:Site)\"),\n                    checkboxInput('ml', 'ML(Default = REML)', FALSE),\n                    checkboxInput('res.12.fix', 'Genotype as Fixed (Default = Random)', FALSE),\n                    actionButton(\"res.12.run\",\"run\",icon = icon(\"hand-o-up\")),\n                    selectInput(\"res.12.1\", \"Choose Results:\",\n                                choices = c(\"Mean\",\n                                            \"Summary\",\n                                            \"ANOVA\",\n                                            \"Analysis of Deviance\",\n                                            \"BLUE\",\"Adjusted Means\",\n                                            \"BLUP\",\"Predicted Means\"),width = 200),\n                    sliderInput(\"res.12.2\", \"Intensity of Selection\",0,100,100),\n                    textInput(\"name.txt.12\",\"Type the File Name\"),\n                    downloadButton('downloadData12', 'Download'),\n                    checkboxInput(\"info.12\",\"Help\", FALSE)\n                  ),\n                  verbatimTextOutput(\"contents12\")\n                ))),\n# #####################################################################################################################################################################################\n      tabItem(\"subitem131\",\n              fluidPage(\n                titlePanel(\"Uploading Files\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    fileInput('file13', 'Choose File.txt',\n                              accept=c('text/csv', \n                                       'text/comma-separated-values,text/plain', \n                                       '.csv',\".txt\")),\n                    tags$hr(),\n                    \n                    checkboxInput('header13', 'Header', FALSE),\n                    radioButtons('sep13', 'Separator',\n                                 c(Comma=',',\n                                   Semicolon=';',\n                                   Tab='\\t'),\n                                 ','),\n                    radioButtons('quote13', 'Quote',\n                                 c(None='',\n                                   'Double Quote'='\"',\n                                   'Single Quote'=\"'\"),\n                                 ''),\n                    checkboxInput(\"info.131\",\"Help\", FALSE),\n                    checkboxInput(\"ex.13\",\"Example\", FALSE)\n                  ),\n                  verbatimTextOutput(\"contents131\")\n                )\n              )\n      ),\n      ######################################################################################################################################################################################\n      tabItem(\"subitem132\",               \n              fluidPage(\n                titlePanel(\"Half Diallel\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    \n                    selectInput(\"res.13.1\", \"Choose Model:\",\n                                choices = c(\"RBD - One Trial\",\"RBD - Several Trials\"),\n                                width = 200),\n                    \n                    sliderInput(\"res.13.0\", \"Wright's inbreeding coefficient (F)\",\n                                0,1,0),\n                    \n                    selectInput(\"res.13.2\", \"Choose Results:\",\n                                choices = c(\n                                  \"F1's Mean\",\n                                  \"Parental Mean\",\n                                  #\"Summary\",\n                                  \"ANOVA\",\n                                  \"Analysis of Deviance\",\n                                  \"GCA of Genitor 1\",\n                                  \"GCA of Genitor 1 by Trial\",\n                                  \"GCA of Genitor 2\",\n                                  \"GCA of Genitor 2 by Trial\",\n                                  \"SCA\",\n                                  \"SCA by Trial\",\n                                  \"Additive Variance\",\n                                  \"Dominance Variance\",\n                                  \"Average Degree of Dominance\",\n                                  \"Genotypic Coefficient of Variation for Genitor 1\",\n                                  \"Genotypic Coefficient of Variation for Genitor 2\",\n                                  \"Broad-sense Herdability\",\n                                  \"Narrow-sense Herdability\",\n                                  \"Average Heterosis\",\n                                  \"Average Heterosis by Parental\",\n                                  \"Predict Hybrid Value\",\n                                  \"Prediction Ability\"\n                                ),width = 200),\n                    \n                    textInput(\"name.txt.13\",\"Type the Name File\"),\n                    \n                    downloadButton('downloadData13', 'Download'),\n                    checkboxInput(\"info.13\",\"Help\", FALSE)\n                  ),\n                  verbatimTextOutput(\"contents132\")\n                )\n              )\n      ),\n      \n      ######################################################################################################################################################################################\n      \n      tabItem(\"subitem133\",\n              fluidPage(\n                titlePanel(\"Full Diallel\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    \n                    selectInput(\"res.133.1\", \"Choose Model:\",\n                                choices = c(\"RBD - One Trial\",\"RBD - Several Trials\"),\n                                width = 200),\n                    \n                    sliderInput(\"res.133.0\", \"Wright's inbreeding coefficient (F)\",\n                                0,1,0),\n                    \n                    selectInput(\"res.133.2\", \"Choose Results:\",\n                                choices = c(\n                                  \"F1's Mean\",\n                                  \"Parental Mean\",\n                                  #\"Summary\",\n                                  \"ANOVA\",\n                                  \"Analysis of Deviance\",\n                                  \"GCA\",\n                                  \"GCA by Trial\",\n                                  \"SCA\",\n                                  \"SCA by Trial\",\n                                  \"Additive Variance\",\n                                  \"Dominance Variance\",\n                                  \"Average Degree of Dominance\",\n                                  \"Genitor's Genotypic Coefficient of Variation\",\n                                  \"Broad-sense Herdability\",\n                                  \"Narrow-sense Herdability\",\n                                  \"Average Heterosis\",\n                                  \"Heterosis by Parental\",\n                                  \"Predict Hybrid Value\",\n                                  \"Prediction Ability\"\n                                ),width = 200),\n                    \n                    textInput(\"name.txt.133\",\"Type the File Name\"),\n                    \n                    downloadButton('downloadData133', 'Download'),\n                    checkboxInput(\"info.133\",\"Help\", FALSE)\n                  ),\n                  verbatimTextOutput(\"contents133\")\n                )\n              )\n      ),\n      \n# #####################################################################################################################################################################################\n      tabItem(\"subitem141\", \n              fluidPage(\n                titlePanel(\"Index Selection\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    fileInput('file14', 'Choose File.txt',\n                              accept=c('text/csv', \n                                       'text/comma-separated-values,text/plain', \n                                       '.csv',\".txt\")),\n                    tags$hr(),\n                    \n                    checkboxInput('header.14', 'Header', FALSE),\n                    radioButtons('sep.14', 'Separator',\n                                 c(Comma=',',\n                                   Semicolon=';',\n                                   Tab='\\t'),\n                                 ','),\n                    radioButtons('quote.14', 'Quote',\n                                 c(None='',\n                                   'Double Quote'='\"',\n                                   'Single Quote'=\"'\"),\n                                 ''),\n                    checkboxInput(\"info.141\",\"Help\", FALSE),\n                    checkboxInput(\"ex.14\",\"Example\", FALSE)\n                  ),\n                  verbatimTextOutput(\"contents14.1\")\n                )\n              )\n      ),\n      \n      ######################################################################################################################################################################################\n      tabItem(\"subitem142\", \n              fluidPage(\n                titlePanel(\"Index Analysis\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    checkboxInput('res.14.name', 'Trait Names', FALSE),\n                    textInput(\"vec.14\", \"Type a vector with weights (comma delimited)\", \"0.3,-0.5,0.1,-0.1\"),\n                    sliderInput(\"res.14\", \"Intensity Selection\",0,100,100),\n                    textInput(\"name.txt.14\",\"Type the File Name\"),\n                    downloadButton('downloadData14', 'Download'),\n                    checkboxInput(\"info.142\",\"Help\", FALSE)\n                  ),\n                  verbatimTextOutput(\"contents14.2\")\n                )\n              )\n      ),\n# #####################################################################################################################################################################################\n      \n      tabItem(\"subitem15\",\n              fluidPage(\n                titlePanel(\"Genotype by Environment\"),\n                sidebarLayout(\n                  sidebarPanel( \n                    actionButton(\"res.15\",\"Repeat Analysis\",icon = icon(\"hand-o-up\"),width = 200),\n                    checkboxInput(\"info.15\",\"Help\", FALSE),\n                    checkboxInput(\"ex.15\",\"Example\", FALSE),\n                    align = \"center\"\n                  ),\n                  verbatimTextOutput(\"contents15.1\")\n                  \n                ))\n      ),\n      \n# #####################################################################################################################################################################################\n      \n      tabItem(\"subitem161\",\n              fluidPage(\n                titlePanel(\"Uploading Files\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    fileInput('file16', 'Choose File.txt',\n                              accept=c('text/csv', \n                                       'text/comma-separated-values,text/plain', \n                                       '.csv',\".txt\")),\n                    tags$hr(),\n                    \n                    checkboxInput('header16', 'Header', FALSE),\n                    radioButtons('sep16', 'Separator',\n                                 c(Comma=',',\n                                   Semicolon=';',\n                                   Tab='\\t'),\n                                 ','),\n                    radioButtons('quote16', 'Quote',\n                                 c(None='',\n                                   'Double Quote'='\"',\n                                   'Single Quote'=\"'\"),\n                                 ''),\n                    checkboxInput(\"info.161\",\"Help\", FALSE),\n                    checkboxInput(\"ex.16\",\"Example\", FALSE)\n                  ),\n                  verbatimTextOutput(\"contents161\")\n                )\n              )\n      ),\n      \n      ######################################################################################################################################################################################      \n      \n      tabItem(\"subitem162\", \n              fluidPage(\n                titlePanel(\"Path Analysis\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    checkboxInput('res.16.name', 'Trait Names', FALSE),\n                    textInput(\"name.16\", \"Main Trait\", \"trait1\"),\n                    selectInput(\"res.16.2\", \"Choose Results:\",\n                                choices = c(\"Path Analysis\",\n                                            \"Traits Correlation\")),\n                    textInput(\"name.txt.16\",\"Type the File Name\"),\n                    downloadButton('downloadData16', 'Download'),\n                    checkboxInput(\"info.162\",\"Help\", FALSE)\n                  ),\n                  verbatimTextOutput(\"contents16.2\")\n                )\n              )\n      ),\n# #####################################################################################################################################################################################      \n      tabItem(\"subitem171\",\n              fluidPage(\n                titlePanel(\"Uploading Files\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    fileInput('file17', 'Choose File.txt',\n                              accept=c('text/csv', \n                                       'text/comma-separated-values,text/plain', \n                                       '.csv',\".txt\")),\n                    tags$hr(),\n                    \n                    checkboxInput('header17', 'Header', FALSE),\n                    radioButtons('sep17', 'Separator',\n                                 c(Comma=',',\n                                   Semicolon=';',\n                                   Tab='\\t'),\n                                 ','),\n                    radioButtons('quote17', 'Quote',\n                                 c(None='',\n                                   'Double Quote'='\"',\n                                   'Single Quote'=\"'\"),\n                                 ''),\n                    checkboxInput(\"info.171\",\"Help\", FALSE),\n                    checkboxInput(\"ex.17\",\"Example\", FALSE)\n                  ),\n                  verbatimTextOutput(\"contents171\")\n                )\n              )\n      ),\n      \n      ######################################################################################################################################################################################      \n      \n      tabItem(\"subitem172\", \n              fluidPage(\n                titlePanel(\"GE Biplot Analysis\"),\n                sidebarLayout(\n                  sidebarPanel(\n                    #checkboxInput('res.17.name', 'Site Names', FALSE),\n                    selectInput(\"res.172\", \"Choose Results:\",\n                                choices = c(\"Summary\",\"Scores of G\",\"Scores of E\"),width = 200),\n                    textInput(\"name.txt.172\",\"Type the File Name\"),\n                    downloadButton('downloadData172', 'Download'),\n                    checkboxInput(\"info.172\",\"Help\", FALSE)\n                  ),\n                  verbatimTextOutput(\"contents172\")\n                )\n              )\n      ),\n      \n      tabItem(\"subitem173\", \n              fluidPage(\n                titlePanel(\"GE Biplot Graphic\"),\n                mainPanel(plotOutput(\"contents173\"))\n                #plotOutput(\"contents173\",width = 1000, height = 500)\n                \n              )\n      ),\n      \ntabItem(\"subitem174\", \n        fluidPage(\n          titlePanel(\"GE Cluster Analysis\"),\n          sidebarLayout(\n            sidebarPanel(\n              numericInput(\"num.174\",\"Determine number of clusters\",min = 1,value = 3),\n              selectInput(\"summary.174\", \"Choose Results:\",\n                          choices = c(\"Cluster information\",\"Genotype groups\",\"Cluster mean\"),width = 200),\n              textInput(\"name.txt.174\",\"Type the File Name\"),\n              downloadButton('downloadData174', 'Download')\n              # ,checkboxInput(\"info.174\",\"Help\", FALSE)\n            ),\n          verbatimTextOutput(\"contents174\")\n          )\n        )\n),\n\ntabItem(\"subitem175\", \n        fluidPage(\n          titlePanel(\"GE Cluster Graphic\"),\n        sidebarLayout(\n        sidebarPanel(\n          checkboxInput(\"sel.175\",\"Cluster Selection\", FALSE),\n          numericInput(\"num.175\",\"Determine number of clusters\",min = 1,value = 3)\n          #,\n          # selectInput(\"res.175\", \"Choose Results:\",\n          #               choices = c(\"Ward Hierarchical Clustering\",\n          #                           \"Biplot analysis by Genotype\",\n          #                           \"Biplot analysis by Cluster\"),width = 200)\n          ),\n          mainPanel(plotOutput(\"contents175\"))\n        )\n        )\n),\n\n\n# #####################################################################################################################################################################################      \n      # Genotipic Breeding\n# #####################################################################################################################################################################################      \n# mol121\n\ntabItem(\"mol121\",\n        fluidPage(\n          titlePanel(\"Uploading File\"),\n          sidebarLayout(\n            sidebarPanel(\n              fileInput('filemol121', 'Choose File.txt',\n                        accept=c('text/csv', \n                                 'text/comma-separated-values,text/plain', \n                                 '.csv',\".txt\")),\n              tags$hr(),\n              \n              checkboxInput('headermol121', 'Header', FALSE),\n              radioButtons('sepmol121', 'Separator',\n                           c(Comma=',',\n                             Semicolon=';',\n                             Tab='\\t'),\n                           ','),\n              radioButtons('quotemol121', 'Quote',\n                           c(None='',\n                             'Double Quote'='\"',\n                             'Single Quote'=\"'\"),\n                           ''),\n              radioButtons('na.stringsmol121', 'na.strings',\n                           c(None='',\n                             'NA'='NA',\n                             '-'=\"-\"),\n                           ''),\n              checkboxInput(\"info.mol121\",\"Help\", FALSE),\n              checkboxInput(\"exmol121\",\"Example\", FALSE)\n            ),\n            verbatimTextOutput(\"contentsmol121\")\n          )\n        )\n),\n# #####################################################################################################################################################################################      \ntabItem(\"mol122\", \n        fluidPage(\n          titlePanel(\"Raw Data\"),\n          sidebarLayout(\n            sidebarPanel(\n              numericInput(\"res1.mol122\",\"MAF:\",value = 0.05,min = 0,max = 1),\n              numericInput(\"res2.mol122\",\"Call Rate:\",value = 0.95,min = 0,max = 1),\n              numericInput(\"res3.mol122\",\"Sweep Sample:\",value = 0.5,min = 0,max = 1),\n              \n              checkboxInput(\"res4.mol122\",\"Input Data\",TRUE),\n              \n              selectInput(\"res5.mol122\", \"Choose Data Frame:\",\n                          choices = c(\"long\",\"wide\")),\n              selectInput(\"res6.mol122\", \"Choose Outfile:\",\n                          choices = c(\"012\",\"-101\",\"structure\")),\n              actionButton(\"res7.mol122\",\"run\",icon = icon(\"hand-o-up\")),\n              \n              selectInput(\"res8.mol122\", \"Choose Output:\",\n                          choices = c(\"M.clean\", \"Hapmap\", \"Report\")),\n              \n              downloadButton('downloadDatamol122', 'Download'),\n              checkboxInput(\"info.mol122\",\"Help\", FALSE)\n            ),\n            verbatimTextOutput(\"contentsmol122\")\n          )\n        )\n),\n# #####################################################################################################################################################################################      \n\ntabItem(\"mol11\",\n        fluidPage(\n          titlePanel(\"Uploading File\"),\n          sidebarLayout(\n            sidebarPanel(\n              fileInput('filemol11', 'Choose File.txt',\n                        accept=c('text/csv', \n                                 'text/comma-separated-values,text/plain', \n                                 '.csv',\".txt\")),\n              tags$hr(),\n              \n              checkboxInput('headermol11', 'Header', FALSE),\n              radioButtons('sepmol11', 'Separator',\n                           c(Comma=',',\n                             Semicolon=';',\n                             Tab='\\t'),\n                           ','),\n              radioButtons('quotemol11', 'Quote',\n                           c(None='',\n                             'Double Quote'='\"',\n                             'Single Quote'=\"'\"),\n                           ''),\n              checkboxInput(\"info.mol11\",\"Help\", FALSE),\n              checkboxInput(\"exmol11\",\"Example\", FALSE)\n            ),\n            verbatimTextOutput(\"contentsmol11\")\n          )\n        )\n),\n\n# #####################################################################################################################################################################################      \n\ntabItem(\"mol1212\",\n        fluidPage(\n          titlePanel(\"HapMap\"),\n          sidebarLayout(\n            sidebarPanel(\n              fileInput('filemol1212', 'Choose File.txt',\n                        accept=c('text/csv', \n                                 'text/comma-separated-values,text/plain', \n                                 '.csv',\".txt\")),\n              tags$hr(),\n              \n              checkboxInput('headermol1212', 'Header', FALSE),\n              radioButtons('sepmol1212', 'Separator',\n                           c(Comma=',',\n                             Semicolon=';',\n                             Tab='\\t'),\n                           ','),\n              radioButtons('quotemol1212', 'Quote',\n                           c(None='',\n                             'Double Quote'='\"',\n                             'Single Quote'=\"'\"),\n                           ''),\n              checkboxInput(\"info.mol1212\",\"Help\", FALSE),\n              checkboxInput(\"exmol1212\",\"Example\", FALSE)\n            ),\n            verbatimTextOutput(\"contentsmol1212\")\n          )\n        )\n),\n\n# #####################################################################################################################################################################################      \n\ntabItem(\"mol13\", \n        fluidPage(\n          titlePanel(\"Kinship Matrix\"),\n          sidebarLayout(\n            sidebarPanel(\n              selectInput(\"res1.mol13\", \"Choose method:\",\n                          choices = c(\"VanRaden\", \"UAR\", \"UARadj\")),\n              selectInput(\"res2.mol13\", \"Choose frame:\",\n                          choices = c(\"wide\", \"long\")),\n              uiOutput(\"res3.mol13\"),\n              actionButton(\"res5.mol13\",\"run\",icon = icon(\"hand-o-up\")),\n              textInput(\"name.txt.mol13\",\"Type the File Name\"),\n              downloadButton('downloadDatamol13', 'Download'),\n              checkboxInput(\"info.mol13\",\"Help\", FALSE)\n            ),\n            verbatimTextOutput(\"contentsmol13\")\n          )\n        )\n),\n\n# #####################################################################################################################################################################################      \n\ntabItem(\"mol21\",\n        fluidPage(\n          titlePanel(\"Phenotypic file\"),\n          sidebarLayout(\n            sidebarPanel(\n              fileInput('filemol21', 'Choose File.txt',\n                        accept=c('text/csv', \n                                 'text/comma-separated-values,text/plain', \n                                 '.csv',\".txt\")),\n              tags$hr(),\n              \n              checkboxInput('headermol21', 'Header', FALSE),\n              radioButtons('sepmol21', 'Separator',\n                           c(Comma=',',\n                             Semicolon=';',\n                             Tab='\\t'),\n                           ','),\n              radioButtons('quotemol21', 'Quote',\n                           c(None='',\n                             'Double Quote'='\"',\n                             'Single Quote'=\"'\"),\n                           ''),\n              checkboxInput(\"info.mol21\",\"Help\", FALSE),\n              checkboxInput(\"exmol21\",\"Example\", FALSE)\n            ),\n            verbatimTextOutput(\"contentsmol21\")\n          )\n        )\n),\n# #####################################################################################################################################################################################      \n\ntabItem(\"mol22\",\n        fluidPage(\n          titlePanel(\"Z Matrix\"),\n          sidebarLayout(\n            sidebarPanel(\n              fileInput('filemol22', 'Choose File.txt',\n                        accept=c('text/csv', \n                                 'text/comma-separated-values,text/plain', \n                                 '.csv',\".txt\")),\n              tags$hr(),\n              \n              checkboxInput('headermol22', 'Header', FALSE),\n              radioButtons('sepmol22', 'Separator',\n                           c(Comma=',',\n                             Semicolon=';',\n                             Tab='\\t'),\n                           ','),\n              radioButtons('quotemol22', 'Quote',\n                           c(None='',\n                             'Double Quote'='\"',\n                             'Single Quote'=\"'\"),\n                           ''),\n              checkboxInput(\"info.mol22\",\"Help\", FALSE),\n              checkboxInput(\"exmol22\",\"Example\", FALSE)\n            ),\n            verbatimTextOutput(\"contentsmol22\")\n          )\n        )\n),\n# #####################################################################################################################################################################################      \n\ntabItem(\"mol23\", \n        fluidPage(\n          titlePanel(\"Genomic selection (GS)\"),\n          sidebarLayout(\n            sidebarPanel(\n              selectInput(\"res.mol23\", \"Choose Results:\",\n                          choices = c(\"Marker effects\",\n                                      \"Breeding values\",\n                                      \"Accuracy\")),\n              textInput(\"name.txt.mol23\",\"Type the File Name\"),\n              downloadButton('downloadDatamol23', 'Download')\n            ),\n            verbatimTextOutput(\"contentsmol23\")\n          )\n        )\n),\n# #####################################################################################################################################################################################      \n\ntabItem(\"mol241\",\n        fluidPage(\n          titlePanel(\"Marker effect\"),\n          sidebarLayout(\n            sidebarPanel(\n              fileInput('filemol241', 'Choose File.txt',\n                        accept=c('text/csv', \n                                 'text/comma-separated-values,text/plain', \n                                 '.csv',\".txt\")),\n              tags$hr(),\n              \n              checkboxInput('headermol241', 'Header', FALSE),\n              radioButtons('sepmol241', 'Separator',\n                           c(Comma=',',\n                             Semicolon=';',\n                             Tab='\\t'),\n                           ','),\n              radioButtons('quotemol241', 'Quote',\n                           c(None='',\n                             'Double Quote'='\"',\n                             'Single Quote'=\"'\"),\n                           ''),\n              checkboxInput(\"info.mol241\",\"Help\", FALSE),\n              checkboxInput(\"exmol241\",\"Example\", FALSE)\n            ),\n            verbatimTextOutput(\"contentsmol241\")\n          )\n        )\n),\n# #####################################################################################################################################################################################      \n\ntabItem(\"mol242\",\n        fluidPage(\n          titlePanel(\"Z Matrix\"),\n          sidebarLayout(\n            sidebarPanel(\n              fileInput('filemol242', 'Choose File.txt',\n                        accept=c('text/csv', \n                                 'text/comma-separated-values,text/plain', \n                                 '.csv',\".txt\")),\n              tags$hr(),\n              \n              checkboxInput('headermol242', 'Header', FALSE),\n              radioButtons('sepmol242', 'Separator',\n                           c(Comma=',',\n                             Semicolon=';',\n                             Tab='\\t'),\n                           ','),\n              radioButtons('quotemol242', 'Quote',\n                           c(None='',\n                             'Double Quote'='\"',\n                             'Single Quote'=\"'\"),\n                           ''),\n              checkboxInput(\"info.mol242\",\"Help\", FALSE),\n              checkboxInput(\"exmol242\",\"Example\", FALSE)\n            ),\n            verbatimTextOutput(\"contentsmol242\")\n          )\n        )\n),\n# #####################################################################################################################################################################################      \n\ntabItem(\"mol243\", \n        fluidPage(\n          titlePanel(\"Genomic selection (GS)\"),\n          sidebarLayout(\n            sidebarPanel(\n              sliderInput(\"res.mol243\", \"Intensity of Selection\",0,100,100),\n              textInput(\"name.txt.mol243\",\"Type the File Name\"),\n              downloadButton('downloadDatamol243', 'Download')\n            ),\n            verbatimTextOutput(\"contentsmol243\")\n          )\n        )\n),\n# #####################################################################################################################################################################################      \n\ntabItem(\"mol31\",\n        fluidPage(\n          titlePanel(\"Phenotypic file\"),\n          sidebarLayout(\n            sidebarPanel(\n              fileInput('filemol31', 'Choose File.txt',\n                        accept=c('text/csv', \n                                 'text/comma-separated-values,text/plain', \n                                 '.csv',\".txt\")),\n              tags$hr(),\n              \n              checkboxInput('headermol31', 'Header', FALSE),\n              radioButtons('sepmol31', 'Separator',\n                           c(Comma=',',\n                             Semicolon=';',\n                             Tab='\\t'),\n                           ','),\n              radioButtons('quotemol31', 'Quote',\n                           c(None='',\n                             'Double Quote'='\"',\n                             'Single Quote'=\"'\"),\n                           ''),\n              checkboxInput(\"info.mol31\",\"Help\", FALSE),\n              checkboxInput(\"exmol31\",\"Example\", FALSE)\n            ),\n            verbatimTextOutput(\"contentsmol31\")\n          )\n        )\n),\n# #####################################################################################################################################################################################      \n\ntabItem(\"mol32\",\n        fluidPage(\n          titlePanel(\"HapMap | t(Z)\"),\n          sidebarLayout(\n            sidebarPanel(\n              fileInput('filemol32', 'Choose File.txt',\n                        accept=c('text/csv', \n                                 'text/comma-separated-values,text/plain', \n                                 '.csv',\".txt\")),\n              tags$hr(),\n              \n              checkboxInput('headermol32', 'Header', FALSE),\n              radioButtons('sepmol32', 'Separator',\n                           c(Comma=',',\n                             Semicolon=';',\n                             Tab='\\t'),\n                           ','),\n              radioButtons('quotemol32', 'Quote',\n                           c(None='',\n                             'Double Quote'='\"',\n                             'Single Quote'=\"'\"),\n                           ''),\n              checkboxInput(\"info.mol32\",\"Help\", FALSE),\n              checkboxInput(\"exmol32\",\"Example\", FALSE)\n            ),\n            verbatimTextOutput(\"contentsmol32\")\n          )\n        )\n),\n# #####################################################################################################################################################################################      \n\ntabItem(\"mol33\", \n        fluidPage(\n          titlePanel(\"GWAS - Scores\"),\n          sidebarLayout(\n            sidebarPanel(\n              textInput(\"name.txt.mol33\",\"Type the File Name\"),\n              downloadButton('downloadDatamol33', 'Download')\n            ),\n            verbatimTextOutput(\"contentsmol33.1\")\n          )\n        )\n),\n# #####################################################################################################################################################################################      \ntabItem(\"mol34\", \n        fluidPage(\n          titlePanel(\"GWAS - Manhattan plot\"),\n          sidebarLayout(\n            sidebarPanel(\n              numericInput(\"LOD\",\"LOD threshold\",value = 4,min = 0)),\n              mainPanel(plotOutput(\"contentsmol33.2\"))\n            )\n        )\n),\n# #####################################################################################################################################################################################      \n\ntabItem(\"mol41\",\n        fluidPage(\n          titlePanel(\"DataSet\"),\n          sidebarLayout(\n            sidebarPanel(\n              selectInput(\"res.mol41\", \"Choose type of file:\",\n                          choices = c(\"Structure\",\n                                      \"Genpop\")),\n              fileInput('filemol41', 'Choose File.txt',\n                        accept=c('text/csv', \n                                 'text/comma-separated-values,text/plain', \n                                 '.csv',\".txt\")),\n              tags$hr(),\n              \n              checkboxInput(\"info.mol41\",\"Help\", FALSE),\n              checkboxInput(\"exmol41\",\"Example\", FALSE)\n            ),\n            verbatimTextOutput(\"contentsmol41\")\n          )\n        )\n),\n# #####################################################################################################################################################################################      \n# Mol42\n\ntabItem(\"mol42\",\n        fluidPage(\n          titlePanel(\"Diversity Summary\"),\n          sidebarLayout(\n            sidebarPanel(\n              selectInput(\"res.mol42\", \"Choose Results:\",\n                          choices = c(\"Summary\",\n                                      \"Expected heterozygosity\"\n                                      #,\"Alleles report\"\n                                      )),\n                          textInput(\"name.txt.mol42\",\"Type the File Name\"),\n                          downloadButton('downloadDatamol42', 'Download')\n             ), verbatimTextOutput(\"contentsmol42\")))\n        ),\n# #####################################################################################################################################################################################      \n# Mol43\n\ntabItem(\"mol43\",\n        fluidPage(\n          titlePanel(\"Graphs\"),\n          sidebarLayout(\n            sidebarPanel(\n              selectInput(\"res.mol43\", \"Choose Results:\",\n                          choices = c(\"Number of alleles per loci\",\n                                      \"Expected Heterozygosity per loci\",\n                                      \"Observed Heterozygosity per loci\",\n                                      \"Heterozygosity: expected-observed\",\n                                      \"F index:  F = (He - Ho)/He\",\n                                      \"Expected Heterozygosity per population\",\n                                      \"Population sample size\",\n                                      \"Principal component analysis by population 1\",\n                                      \"Principal component analysis by population 2\",\n                                      \"Principal component analysis by individual\",\n                                      \"Dendrogram by individual\",\n                                      \"Dendrogram by population\",\n                                      #\"Number of PCs\",\n                                      \"Population Structure\",\n                                      \"Neighbor joining dendrogram\")),\n              uiOutput(\"ui.mol43\"),\n              uiOutput(\"ui.mol43.2\"),\n              uiOutput(\"ui.mol43.3\"),\n              uiOutput(\"ui.mol43.4\")\n            ), mainPanel(plotOutput(\"contentsmol43\"))))\n),\n\n# #####################################################################################################################################################################################      \n# Mol51\n\ntabItem(\"mol51\",\n        fluidPage(\n          titlePanel(\"Subpopulation Groups\"),\n          sidebarLayout(\n            sidebarPanel(\n              fileInput('filemol51', 'Choose File.txt',\n                        accept=c('text/csv', \n                                 'text/comma-separated-values,text/plain', \n                                 '.csv',\".txt\")),\n              tags$hr(),\n              \n              checkboxInput('headermol51', 'Header', FALSE),\n              radioButtons('sepmol51', 'Separator',\n                           c(Comma=',',\n                             Semicolon=';',\n                             Tab='\\t'),\n                           ','),\n              radioButtons('quotemol51', 'Quote',\n                           c(None='',\n                             'Double Quote'='\"',\n                             'Single Quote'=\"'\"),\n                           ''),\n              checkboxInput(\"info.mol51\",\"Help\", FALSE),\n              checkboxInput(\"exmol51\",\"Example\", FALSE)\n            ),\n            verbatimTextOutput(\"contentsmol51\")\n          )\n        )\n),\n# #####################################################################################################################################################################################      \n# Mol52\ntabItem(\"mol52\",\n        fluidPage(\n          titlePanel(\"Z Matrix\"),\n          sidebarLayout(\n            sidebarPanel(\n              fileInput('filemol52', 'Choose File.txt',\n                        accept=c('text/csv', \n                                 'text/comma-separated-values,text/plain', \n                                 '.csv',\".txt\")),\n              tags$hr(),\n              \n              checkboxInput('headermol52', 'Header', FALSE),\n              radioButtons('sepmol52', 'Separator',\n                           c(Comma=',',\n                             Semicolon=';',\n                             Tab='\\t'),\n                           ','),\n              radioButtons('quotemol52', 'Quote',\n                           c(None='',\n                             'Double Quote'='\"',\n                             'Single Quote'=\"'\"),\n                           ''),\n              checkboxInput(\"info.mol52\",\"Help\", FALSE),\n              checkboxInput(\"exmol52\",\"Example\", FALSE)\n            ),\n            verbatimTextOutput(\"contentsmol52\")\n          )\n        )\n),\n# #####################################################################################################################################################################################      \n# Mol53\ntabItem(\"mol53\", \n        fluidPage(\n          titlePanel(\"PopGen Analysis\"),\n          sidebarLayout(\n            sidebarPanel(\n              selectInput(\"res.mol53\", \"Choose Results:\",\n                          choices = c(\"General\",\n                                      \"By Group\",\n                                      \"Exclusive Alleles\",\n                                      \"Fixed Alleles\")),\n              textInput(\"name.txt.mol53\",\"Type the File Name\"),\n              downloadButton('downloadDatamol53', 'Download'),\n              checkboxInput(\"info.mol53\",\"Help\", FALSE)\n            ),\n            verbatimTextOutput(\"contentsmol53\")\n          )\n        )\n),\n\n\n# #####################################################################################################################################################################################      \n      # Information\n      \n      tabItem(\"info1\",         \n              fluidPage(\n                titlePanel(\"About Be-Breeder\"),\n                fluidRow(\n                  br(),\n                  pre(includeText(\"BeBreederAbout.txt\"))\n                ))),\n      tabItem(\"info2\", \"1. Fritsche-Neto, Roberto and Matias, Filipe Inacio. Be-Breeder - Learning: a new tool for teaching and learning plant breeding principles. Crop Breeding and Applied Biotechnology. Vol 16: 240-245p, 2016.\n(Brazilian Society of Plant Breeding. Printed in Brazil http://dx.doi.org/10.1590/1984-70332016v16n3n36).\",\n              h1(),\n\"2. Matias, Filipe Inacio;  Granato, Italo Stefanine Correa; Dequigiovanni, Gabriel; Fritsche-Neto, Roberto. Be-Breeder-an application for analysis of genomic data in plant breeding.Crop Breeding and Applied Biotechnology. Vol 17: 54-58, 2017.\n              (Brazilian Society of Plant Breeding. Printed in Brazil http://dx.doi.org/10.1590/1984-70332017v17n1n8)\"),\n      tabItem(\"info3\", \n              fluidPage(\n                titlePanel(\"Contact\"),\n                fluidRow(\n                  br(),\n                  pre(includeText(\"BeBreederContact.txt\"))\n                )))\n      \n      ######################################################################################################################################################################################\n    )\n  )\n  \n# #####################################################################################################################################################################################\n  \n  shinyApp(\n    ui = dashboardPage(header, sidebar, body),\n    server = function(input, output) { \n      \n# #####################################################################################################################################################################################\n      #Geral\n      \n      options(shiny.maxRequestSize=50*1024^2)\n      \n# #####################################################################################################################################################################################\n      #Lean.1\n      \n      output$cont.Lear.1.0 <- renderPrint({\n        \n        f.1<-input$Lear1.2\n        \n        a1<-2*f.1 # Va. Among\n        a2<-(1-f.1) # Va. Within\n        a3<-(f.1)*(1-f.1) # Vd. Among\n        a4<-(1-f.1) # Vd. Within\n        \n        M<-t(cbind(round(a1,3),round(a2,3),round(a3,3),round(a4,3)))\n        rownames(M)<-c(\"Va among =\",\"Va within =\",\"Vd among =\",\"Vd within =\")\n        colnames(M)<-c(\"Variance:\")\n        \n        return(M)\n      })\n      \n      output$cont.Lear.1 <- renderPlot({\n        \n        X<-matrix(c(0,100,0,\n                    25,50,25,\n                    37.5,25,37.5,\n                    43.75,12.5,43.75,\n                    46.875,6.25,46.875,\n                    48.4375,3.125,48.4375,\n                    49.21875,1.5625,49.21875,\n                    49.60938,0.78125,49.60938,\n                    49.80469,0.390625,49.80469,\n                    50,0,50),3,10)\n        \n        out.Lear.1<-reactive({\n          switch(input$Lear1.1,\n                 \"F1\"=X[,1],\n                 \"F2\"=X[,2],\n                 \"F3\"=X[,3],\n                 \"F4\"=X[,4],\n                 \"F5\"=X[,5],\n                 \"F6\"=X[,6],\n                 \"F7\"=X[,7],\n                 \"F8\"=X[,8],\n                 \"F9\"=X[,9],\n                 \"F.inf\"=X[,10])\n        })\n        \n        barplot(as.vector(out.Lear.1()), names.arg=c(\"aa\",\"Aa\",\"AA\"), \n                ylab=c(\"Genotype Frequency (%)\"), \n                xlab=\"Genotype\",  \n                cex.names=0.8, \n                ylim = c(0,100),\n                col=c(\"darkred\",\"darksalmon\",\"lightgoldenrodyellow\")\n        )\n        \n        add_legend <- function(...) {\n          opar <- par(fig=c(0, 1, 0, 1), oma=c(0, 0, 0, 0),\n                      mar=c(0, 0, 0, 0), new=TRUE)\n          on.exit(par(opar))\n          plot(0, 0, type='n', bty='n', xaxt='n', yaxt='n')\n          legend(...)\n        }\n        \n        add_legend(\"top\",\n                   legend=out.Lear.1(),\n                   pch=15,\n                   col=c(\"darkred\",\"darksalmon\",\"lightgoldenrodyellow\"),\n                   border = \"white\",\n                   box.col=\"white\",\n                   bty=\"n\",\n                   bg=\"n\",\n                   text.width=c(0.3,0.3,0.3),\n                   horiz=TRUE\n        )\n        \n      }\n      #, height = 400, width = 500\n      )\n      \n# #####################################################################################################################################################################################\n      #Lean.3\n      \n      classes<-function(ngd, ngp, nga){\n        \n        vgd<-matrix(rep(sample(c(3, 3, 3, 1), 1000, replace = T), ngd), ngd, 1000)\n        vgp<-matrix(rep(sample(c(3, 2.5, 2.5, 1), 1000, replace = T), ngp), ngp, 1000)\n        vga<-matrix(rep(sample(c(3, 2, 2, 1), 1000, replace = T), nga), nga, 1000)\n        \n        vgt<-apply(rbind(vgd, vgp, vga), 2, sum)\n        \n        nclasses<-length(unique(vgt))\n        \n        MAIN<-paste(\"Distribution of \",nclasses,\" Classes\",sep = \"\")\n        \n        hist(vgt, xlab = \"Genotypic value\", main = MAIN , col = \"seagreen\")\n        \n        return(paste(\"number of classes:\", nclasses))\n        \n      }\n      \n      output$cont.Lear.3 <- renderPlot({ \n        \n        classes(input$Lear3.1,input$Lear3.2,input$Lear3.3)      \n      }\n      #, height = 400, width = 500\n      )\n      \n# #####################################################################################################################################################################################\n      #Lean.4\n      \n      output$cont.Lear.4 <- renderPrint({\n        \n        IH<-((2^((input$Lear4.2)-1)-1)/2^(input$Lear4.2))^(input$Lear4.1)\n        NP<-round((log(1-input$Lear4.3)/log(1-IH)),0)\n        names(NP)<-c(\"Number of plants that should be evaluated:\")\n        \n        return(NP)\n      })\n      \n# #####################################################################################################################################################################################\n      #Lean.5\n      \n      output$cont.Lear.5 <- renderPrint({\n        \n        AA<-input$Lear5.2\n        Aa<-input$Lear5.3\n        aa<-input$Lear5.4\n        N<-sum(AA,Aa,aa)\n        Total<-N\n        \n        if(N==0){return(NULL)}\n        \n        VG.AA<-input$Lear5.5\n        VG.Aa<-input$Lear5.6\n        VG.aa<-input$Lear5.7\n        \n        Mean.0<-round(sum((AA*VG.AA),(Aa*VG.Aa),(aa*VG.aa))/N,3)\n        \n        p<-round((AA+Aa/2)/N,3)\n        q<-round(1-p,3)\n        \n        AA.Esp<-round((p^2+p*q*input$Lear5.41)*N,0)\n        Aa.Esp<-round((2*p*q-2*p*q*input$Lear5.41)*N,0)\n        aa.Esp<-round((q^2+p*q*input$Lear5.41)*N,0)\n        \n        # include this estimations (before selection)\n        a <- (VG.AA - VG.aa)/2\n        d <- VG.Aa - (VG.AA + VG.aa)/2\n        alpha <- a + (p - q)*d #efeito de susbtitução alélica no loco\n        Va = 2*p*q*alpha^2\n        Vd = 2*p*q*d^2\n        A.effect <- -q*alpha #efeito de subst no A\n        a.effect <- p*alpha\n        \n        #f<-0\n        #if(input$Lear5.41==0){f<-1-Aa/Aa.Esp}\n        if(input$Lear5.41==0){f<-(2*p*q - Aa/N)/(2*p*q)}\n        if(input$Lear5.41!=0){f<-input$Lear5.41}\n        #if(f<=0){f<-0}        \n\n        qui.cal<-round(sum((AA-AA.Esp)^2/AA.Esp,(Aa-Aa.Esp)^2/Aa.Esp,(aa-aa.Esp)^2/aa.Esp),3)\n        qui.tab<-6.63\n        \n        Sel.AA<-input$Lear5.8\n        Sel.Aa<-input$Lear5.9\n        Sel.aa<-input$Lear5.10\n        Ns<-sum(Sel.AA,Sel.Aa,Sel.aa)\n        h2<-input$Lear5.11\n        \n        ps<-round((2*Sel.AA+Sel.Aa)/(2*Ns),3)\n        qs<-round((2*Sel.aa+Sel.Aa)/(2*Ns),3)\n        \n        AA.Sel<-round((ps^2+ps*qs*input$Lear5.41)*Ns,0)\n        Aa.Sel<-round((2*ps*qs-2*ps*qs*input$Lear5.41)*Ns,0)\n        aa.Sel<-round((qs^2+ps*qs*input$Lear5.41)*Ns,0)\n\n        # Then, after selection based on\n        # New.p and\n        # New.q\n        # include this estimations\n        new.alpha <- a + (ps - qs)*d #novo efeito de substitição alélia\n        new.Va <- 2*ps*qs*new.alpha^2 #nova variância aditiva\n        new.Vd <- 2*ps*qs*d^2 #calcular com a nova variância de dominância\n        new.A.effect <- -qs*new.alpha # novo efeito de substituiçao\n        new.a.effect <- ps*new.alpha\n        \n        inic.1<-c(alpha,Va,Vd,A.effect,a.effect)\n        inic.2<-c(new.alpha,new.Va,new.Vd,new.A.effect,new.a.effect)\n        \n        #fs<-0\n        if(input$Lear5.41==0){fs<-(2*ps*qs - Aa.Sel/Ns)/(2*ps*qs)}\n        if(input$Lear5.41!=0){fs<-input$Lear5.41}\n        #if(fs<=0){fs<-0} \n        \n        Mean.Sel<-round(sum((AA.Sel*VG.AA),(Aa.Sel*VG.Aa),(aa.Sel*VG.aa))/sum(AA.Sel,Aa.Sel,aa.Sel),3)\n        \n        DS<-round(Mean.Sel-Mean.0,3)\n        \n        GS<-round(DS*h2,3)\n        \n        LIS.0<-as.data.frame(cbind(p,q,a,d,round((AA.Esp/N),3),round((Aa.Esp/N),3),round((aa.Esp/N),3),round(f,3)))\n        colnames(LIS.0)<-c(\" p\",\" q\",\" a\",\" d\",\" D\",\" H\",\" R\",\" F\")\n        \n        LIS.1<-as.data.frame(cbind(rbind(AA,Aa,aa,Total),rbind(AA.Esp,Aa.Esp,aa.Esp,Total)))\n        colnames(LIS.1)<-c(\"Observed\",\"| Expected\")\n        \n        LIS.2<-cbind(qui.cal,qui.tab)\n        colnames(LIS.2)<-c(\"X-squared.Cal\",\"| X-squared.Tab\")\n        \n        LIS.3<-as.data.frame(cbind(Mean.0,Mean.Sel,DS,GS))\n        colnames(LIS.3)<-c(\"Original Mean\",\"| Selected Mean\",\"| Selection Differential\",\"| Response to Selection\")\n        \n        LIS.4<-as.data.frame(cbind(ps,qs,round((AA.Sel/Ns),3),round((Aa.Sel/Ns),3),round((aa.Sel/Ns),3),round(fs,3)))\n        colnames(LIS.4)<-c(\"New p\",\" New q\",\" New D\",\" New H\",\" New R\",\" F\")\n        \n        LIS.4.5<-as.data.frame(cbind(round(inic.1,3),round(inic.2,3)))\n        colnames(LIS.4.5)<-c(\"Original\", \"Selected\")\n        rownames(LIS.4.5)<-c(\"alpha\",\"Va\",\"Vd\",\"A.effect\",\"a.effect\")\n          \n        LIST.Lear5<-list(LIS.0,LIS.1,LIS.2,LIS.4,LIS.4.5,LIS.3)\n        names(LIST.Lear5)<-c(\"Frequency\",\"Table Information\",\"X-squared Test\",\"Selection Frequency\",\"Allelic Effect Substitution\",\"Selection Information\")\n        \n        \n        \n        return(LIST.Lear5)\n      })\n      \n# #####################################################################################################################################################################################\n      #Lean.6\n      \n      var1<-function(p, a, d){\n        p<-as.numeric(p)  \n        a<-as.numeric(a)\n        d<-as.numeric(d)\n        \n        Var.g<-function(p, a, d){\n          Vg<-2*p*(1-p)*(a+((1-p)-p)*d)^2+(2*p*(1-p)*d)^2\n          return(Vg)\n        }\n        vg<-Var.g(p, a, d)  \n        \n        Var.a<-function(p, a, d){\n          Va<-2*p*(1-p)*(a+((1-p)-p)*d)^2\n          return(Va)\n        }\n        va<-Var.a(p, a, d)\n        \n        Var.d<-function(p, d){\n          Vd<-(2*p*(1-p)*d)^2\n          return(Vd)\n        }\n        vd<-Var.d(p, d)\n        \n        gmd<-d/a\n        \n        alpha <- a + (p - (1-p))*d\n        alpha <- as.numeric(alpha)\n        A.effect <- -(1-p)*alpha\n        a.effect <- p*alpha\n        \n        curve(Var.g(x, a, d), from = 0, to = 1, col=\"black\", xlab = \"p\", ylab = \"Variances\")\n        curve(Var.a(x, a, d), from = 0, to = 1, add = T, col=\"blue\")\n        curve(Var.d(x, d), from = 0, to = 1, add = T, col=\"red\")\n        legend(\"topright\", c(\"Vg\",\"Va\",\"Vd\"), lty=c(1,1), lwd=c(2.5,2.5, 2.5),col=c(\"black\", \"blue\",\"red\"))\n        \n      }\n      \n      var2<-function(p, a, d){\n        p<-as.numeric(p)  \n        a<-as.numeric(a)\n        d<-as.numeric(d)\n        \n        Var.g<-function(p, a, d){\n          Vg<-2*p*(1-p)*(a+((1-p)-p)*d)^2+(2*p*(1-p)*d)^2\n          return(Vg)\n        }\n        vg<-Var.g(p, a, d)  \n        \n        Var.a<-function(p, a, d){\n          Va<-2*p*(1-p)*(a+((1-p)-p)*d)^2\n          return(Va)\n        }\n        va<-Var.a(p, a, d)\n        \n        Var.d<-function(p, d){\n          Vd<-(2*p*(1-p)*d)^2\n          return(Vd)\n        }\n        vd<-Var.d(p, d)\n        \n        gmd<-d/a\n        \n        alpha <- a + (p - (1-p))*d\n        alpha <- as.numeric(alpha)\n        A.effect <- -(1-p)*alpha\n        a.effect <- p*alpha\n        \n        output<-as.data.frame(rbind(\"Vg\"=vg, \"Va\"=va, \"Vd\"=vd, \"add\"=gmd, \"A.effect\"=A.effect, \"a.effect\"=a.effect))\n        colnames(output)<-c(\"Results\")\n        \n        return(output)\n      }\n      \n      output$cont.Lear.6 <- renderPlot({\n        \n        d<-input$Lear6.1\n        p<-input$Lear6.2\n        a<-input$Lear6.3\n        \n        var1(p, a, d)\n        \n      }\n      #, height = 400, width = 500\n      )\n      \n      output$cont.Lear.6.1 <- renderPrint({\n        \n        d<-input$Lear6.1\n        p<-input$Lear6.2\n        a<-input$Lear6.3\n        \n        return(var2(p, a, d))\n        \n      })\n      \n# #####################################################################################################################################################################################\n      #Lean.7\n      \n      output$cont.Lear.7 <- renderPrint({\n        \n        prog<-input$Lear7.1\n        \n        allel.0<-as.numeric(unlist(strsplit(input$Lear7.2,\",\")))\n        \n        if(length(allel.0)>prog|length(allel.0)<prog)\n        {return(paste(\"The number of frequency should be \",prog,sep = \"\"))}\n        \n        if(sum(allel.0)!=1)\n        {return(paste(\"The sum of frequency should be equal a 1\"))}\n        \n        \n        allel<-allel.0\n        \n        div<-(sum(allel^2))\n        \n        RH<-1-div\n        Var.G<-div-div^2\n        PB<-as.data.frame(cbind(RH,Var.G))\n        names(PB)<-c(\"Residual Heterosigosy (RH)\",\"Variance of Heterosigosy\")\n        \n        return(PB)\n      })\n      \n# #####################################################################################################################################################################################\n      #Lean.8\n      \n      output$cont.Lear.8 <- renderPrint({\n        \n        if(input$Lear8.1=='MI/MI'){D1=0;c=(1/4);Ne=4;}\n        if(input$Lear8.1=='MI/S1'){D1=0;c=(1/2);Ne=1;}\n        if(input$Lear8.1=='IC/IC'){D1=0;c=(1/2);Ne=2;}\n        if(input$Lear8.1=='IC/S1'){D1=0;c=(1/2);Ne=1;}\n        if(input$Lear8.1=='S1/S1'){D1=(0.5);c=1;Ne=1;}\n        if(input$Lear8.1=='S2/S2'){D1=(5/4);c=(3/2);Ne=(2/3);}\n        \n        I<-function(persel){\n          estimate<-dnorm(qnorm(1-(persel/100), 0, 1), 0, 1)/(persel/100)\n          return(estimate)\n        }\n        \n        i<-I(input$Lear8.5)\n        SP<-(input$Lear8.5)/100\n        \n        total<-input$Lear8.2\n        NE<-Ne*SP*total\n        f<-1/(2*NE)\n        DE<-input$Lear8.3\n        Va<-input$Lear8.4\n        \n        GS<-(i*c*(Va+f*D1))-(DE*6*i)/(2*NE)\n        GS.T<-GS/input$Lear8.6\n        \n        LISTA.8<-list(GS,GS.T,NE,f)\n        names(LISTA.8)<-c(\"Response to Selection\",\"Response to Selection per Year\",\"Effective Population Size (Ne)\",\"F Wright\")\n        return(LISTA.8)\n      })\n      ######################################################################################################################################################################################\n      #Lean.8.1\n      \n      output$cont.Lear.8.1 <- renderPrint({\n        \n        if(input$Lear81.1=='MI/MI'){c=(1/8);Ne=4;}\n        if(input$Lear81.1=='MI/S1'){c=(1/4);Ne=1;}\n        if(input$Lear81.1=='TC/MI'){c=(1/16);Ne=4;}\n        if(input$Lear81.1=='IC/S1'){c=(1/4);Ne=1;}\n        \n        I<-function(persel){\n          estimate<-dnorm(qnorm(1-(persel/100), 0, 1), 0, 1)/(persel/100)\n          return(estimate)\n        }\n        \n        i1<-I(input$Lear81.51)\n        SP1<-(input$Lear81.51)/100\n        i2<-I(input$Lear81.52)\n        SP2<-(input$Lear81.52)/100\n        \n        total.1<-input$Lear81.21\n        total.2<-input$Lear81.22\n        NE.1<-Ne*SP1*total.1\n        NE.2<-Ne*SP2*total.2\n        NE.T<-as.data.frame(cbind(NE.1,NE.2))\n        names(NE.T)<-c(\"Group 1\",\"Group 2\")\n        f.1<-1/(2*NE.1)\n        f.2<-1/(2*NE.2)\n        f.T<-as.data.frame(cbind(f.1,f.2))\n        names(f.T)<-c(\"Group 1\",\"Group 2\")\n        Va.1<-input$Lear81.41\n        Va.2<-input$Lear81.42\n        \n        GS<-(i1*c*Va.1)+(i2*c*Va.2)\n        GS.T<-GS/input$Lear81.6\n        \n        LISTA.81<-list(GS,GS.T,NE.T,f.T)\n        names(LISTA.81)<-c(\"Response to Selection\",\"Response to Selection per Year\",\"Effective Population Size (Ne)\",\"F Wright\")\n        return(LISTA.81)\n      })\n      \n# #####################################################################################################################################################################################\n      #Lean.9.1\n      \n      out.Lear.91.1 <- reactive({\n        \n        if(input$ex.L.9!=FALSE){\n          TABE.1<-matrix(c(8,15,14,11,15,4,18,12,14,18,6,10,11,12,10,3),4,4)\n          colnames(TABE.1)<-c(\"A\",\"B\",\"C\",\"D\")\n          rownames(TABE.1)<-c(\"A\",\"B\",\"C\",\"D\")\n          \n          return(TABE.1)}\n        \n        inFile <- input$file.L9\n        \n        if (is.null(inFile))\n          return(NULL)\n        \n        TABE<-read.table(inFile$datapath, header=input$header.L9, sep=input$sep.L9, \n                         quote=input$quote.L9)\n        \n        rownames(TABE)<-TABE[,1]\n        TABE.2<-TABE[,-1]\n        \n        return(TABE.2)\n      })\n      \n      out.Lear.91.2 <- reactive({\n        \n        X<-out.Lear.91.1()\n        \n        if (is.null(X))\n          return(NULL)\n        \n        Hib.T<-NULL\n        \n        for(i in 1:dim(X)[1]){\n          for(u in 1:dim(X)[1]){\n            for(t in 1:dim(X)[1]){\n              if(colnames(X)[i]!=colnames(X)[u]&\n                 colnames(X)[i]!=colnames(X)[t]&\n                 colnames(X)[u]!=colnames(X)[t]){\n                HT<-paste(\"HT(\",colnames(X)[i],colnames(X)[u],\")\",colnames(X)[t],sep=\"\")\n                x.1<-X[row.names(X)==colnames(X)[i],colnames(X)==colnames(X)[t]]\n                x.2<-X[row.names(X)==colnames(X)[u],colnames(X)==colnames(X)[t]]\n                HT.Predict<-(1/2)*(x.1+x.2)\n                Hib.T<-rbind(Hib.T,cbind(HT,HT.Predict))\n              }\n            }\n          }\n        }\n        return(as.data.frame(Hib.T))\n      })  \n      out.Lear.91.3 <- reactive({\n        \n        X<-out.Lear.91.1()\n        \n        if (is.null(X))\n          return(NULL) \n        \n        Hib.D<-NULL\n        \n        for(i in 1:dim(X)[1]){\n          for(u in 1:dim(X)[1]){\n            for(t in 1:dim(X)[1]){\n              for(w in 1:dim(X)[1]){\n                if(colnames(X)[i]!=colnames(X)[u]&\n                   colnames(X)[i]!=colnames(X)[t]&\n                   colnames(X)[i]!=colnames(X)[w]&\n                   colnames(X)[u]!=colnames(X)[t]&\n                   colnames(X)[u]!=colnames(X)[w]&\n                   colnames(X)[t]!=colnames(X)[w]\n                ){\n                  HD<-paste(\"HD(\",colnames(X)[i],colnames(X)[u],\")(\",colnames(X)[t],colnames(X)[w],\")\",sep=\"\")\n                  x.1<-X[row.names(X)==colnames(X)[i],colnames(X)==colnames(X)[t]]\n                  x.2<-X[row.names(X)==colnames(X)[i],colnames(X)==colnames(X)[w]]\n                  x.3<-X[row.names(X)==colnames(X)[u],colnames(X)==colnames(X)[t]]\n                  x.4<-X[row.names(X)==colnames(X)[u],colnames(X)==colnames(X)[w]]\n                  HD.Predict<-(1/4)*(x.1+x.2+x.3+x.4)\n                  Hib.D<-rbind(Hib.D,cbind(HD,HD.Predict))\n                }\n              }\n            }\n          }\n        }\n        return(as.data.frame(Hib.D))\n      })  \n      \n      output$cont.Lear.9.1 <- renderPrint({\n        \n        switch(input$Lear91.out,\n               \"Table\"=out.Lear.91.1(),\n               \"Three-way Cross Hybrids Prediction\"=out.Lear.91.2(),\n               \"Double Cross Hybrids Prediction\"=out.Lear.91.3()\n        )\n      })\n      \n      ######################################################################################################################################################################################\n      #Lean.9.2\n      \n      out.Lear.92.One<-reactive({\n        \n        n<-input$Lear9.2.2\n        \n        HS<-(n*(n-1))/2\n        \n        HT<-(n*(n-1)*(n-2))/2\n        \n        HD<-(n*(n-1)*(n-2)*(n-3))/8\n        \n        HIB<-cbind(n,HS,HT,HD)\n        \n        colnames(HIB)<-c(\"Number of Lines\",\"|  HS\",\"|  HT\",\"|  HD\")\n        \n        return(HIB)\n      })\n      \n      out.Lear.92.Two<-reactive({\n        \n        a<-input$Lear9.2.3\n        \n        b<-input$Lear9.2.4\n        \n        HS.1<-a*b\n        \n        HT.1<-a*(a-1)*b+b*(b-1)*a\n        \n        HD.1<-a*(a-1)*b*(b-1)\n        \n        HIB<-cbind(a,b,HS.1,HT.1,HD.1)\n        \n        colnames(HIB)<-c(\"Lines Group A\",\"|  Lines Group B\",\"|  HS\",\"|  HT\",\"|  HD\")\n        \n        return(HIB)\n      })\n      \n      \n      output$cont.Lear.9.2 <- renderPrint({\n        \n        switch(input$Lear9.2.1,\n               \"One Heterotic Group\"=out.Lear.92.One(),\n               \"Two Heterotic Group\"=out.Lear.92.Two()\n        )\n      })\n      \n# #####################################################################################################################################################################################\n      #Lean.10\n      \n      gxa1<-function(ga11, ga12, ga21, ga22, ga31, ga32, CV, R){\n        \n        fen<-t(matrix(c(ga11, ga12, ga21, ga22, ga31, ga32),2,3))\n        rownames(fen)<-c(\"G1\", \"G2\", \"G3\")\n        colnames(fen)<-c(\"Env1\", \"Env2\")\n        \n        #medias e totais\n        Mg<-apply(fen, 1, mean)\n        Menv<-apply(fen, 2, mean)\n        Tg<-apply(fen, 1, sum)\n        Tenv<-apply(fen, 2, sum)\n        \n        #grafico\n        Yield<-c(fen[1,1], fen[1,2], fen[2,1], fen[2,2], fen[3,1], fen[3,2])\n        Genotype<-as.factor(c(\"G1\", \"G1\", \"G2\",\"G2\", \"G3\", \"G3\"))\n        Environment<-as.factor(c(\"Env1\", \"Env2\",\"Env1\", \"Env2\",\"Env1\", \"Env2\"))\n        mgxa<-data.frame(Genotype,Environment,Yield)\n\n        #anova\n        X<-mean(Yield)\n        QMR<-(CV*X/100)^2\n        C<-sum(Yield)^2/6\n        SQTotal<-(sum(Yield^2)-C)*R\n        SQG<-(sum(Tg^2)/2-C)*R\n        SQE<-(sum(Tenv^2)/3-C)*R\n        SQGE<-SQTotal-SQG-SQE\n        QMG<-SQG/2\n        QME<-SQE\n        QMGE<-SQGE/2\n        VG<-round((QMG-QMR)/(2*R),2)\n        VE<-round((QME-QMR)/(3*R),2)\n        VGE<-round((QMGE-QMR)/R,2)  \n        \n        if(VG<0){VG<-0}\n        if(VE<0){VE<-0}\n        if(VGE<0){VGE<-0}\n        \n        Vr<-round(QMR,2)\n        h2g<-round(VG/(VG+VGE/2+Vr/(R*2)),2)\n        \n        varcomp<-c(VG, VE, VGE, Vr, h2g)\n        names(varcomp)<-c(\"VG\", \"VE\", \"VGE\", \"Vr\", \"h2g\")\n        \n        Lista1<-list(Mg, Menv,varcomp)\n        names(Lista1)<-c(\"Genotype Mean:\", \"Environment Mean:\",\"Variances:\")\n        \n        return(Lista1)\n      }\n      \n      gxa2<-function(ga11, ga12, ga21, ga22, ga31, ga32, CV, R){\n        \n        fen<-t(matrix(c(ga11, ga12, ga21, ga22, ga31, ga32),2,3))\n        rownames(fen)<-c(\"G1\", \"G2\", \"G3\")\n        colnames(fen)<-c(\"Env1\", \"Env2\")\n        \n        #medias e totais\n        Mg<-apply(fen, 1, mean)\n        Menv<-apply(fen, 2, mean)\n        Tg<-apply(fen, 1, sum)\n        Tenv<-apply(fen, 2, sum)\n        \n        #grafico\n        Yield<-c(fen[1,1], fen[1,2], fen[2,1], fen[2,2], fen[3,1], fen[3,2])\n        Genotype<-as.factor(c(\"G1\", \"G1\", \"G2\",\"G2\", \"G3\", \"G3\"))\n        Environment<-as.factor(c(\"Env1\", \"Env2\",\"Env1\", \"Env2\",\"Env1\", \"Env2\"))\n        mgxa<-data.frame(Genotype,Environment,Yield)\n        Fig<-interaction.plot(mgxa$Environment, mgxa$Genotype, mgxa$Yield, trace.label= \"Genotype\", xlab = \"Environments\", ylab = \"Yield\", col = 2)\n        \n        return(Fig)\n      }\n      \n      output$cont.Lear.10.1 <- renderPrint({\n        return(gxa1(input$Lear10.1, input$Lear10.2, \n                   input$Lear10.3, input$Lear10.4,\n                   input$Lear10.5, input$Lear10.6,\n                   input$Lear10.7, input$Lear10.8))\n      })\n      \n      output$cont.Lear.10.2 <- renderPlot({\n        return(gxa2(input$Lear10.1, input$Lear10.2, \n                   input$Lear10.3, input$Lear10.4,\n                   input$Lear10.5, input$Lear10.6,\n                   input$Lear10.7, input$Lear10.8))\n      }\n      #, height = 400, width = 500\n      )\n      \n# #####################################################################################################################################################################################\n      #Lean.11\n      \n      output$cont.Lear.11 <- renderPrint({\n        \n        heterose<-function(Ng, gmd, dg){\n          \n          L1<-matrix(sample(c(\"A\", \"a\"), Ng, replace = T), Ng, 1)\n          \n          if(dg!=0&dg!=1){\n            n<-Ng-(dim(L1)[1]*dg)\n            L1.1<-L1[1:n,]\n            L1.2<-L1[(n+1):dim(L1)[1],]\n            L1.3<-NULL\n            for(u in 1:length(L1.2)){\n              if(L1.2[u]==\"a\"){L1.3[u]<-\"A\"}\n              if(L1.2[u]==\"A\"){L1.3[u]<-\"a\"}\n            } \n            L2.1<-c(L1.1,L1.3)\n            L2<-L2.1}\n          \n          if(dg==0){L2<-L1}\n          if(dg==1){\n            L2<-NULL\n            for(i in 1:length(L1)){\n              if(L1[i]==\"a\"){L2[i]<-\"A\"}\n              if(L1[i]==\"A\"){L2[i]<-\"a\"}\n            } \n          }\n          \n          coinc<-L1==L2\n          dist<-round(length(coinc[coinc==FALSE])/Ng,1)\n          \n          HS<-paste(L1, L2, sep = \"\")\n          \n          L1[L1==\"A\"]<-2\n          L1[L1==\"a\"]<-0\n          L2[L2==\"A\"]<-2\n          L2[L2==\"a\"]<-0\n          HS[HS==\"AA\"]<-2\n          HS[HS==\"aA\"]<-1+1*gmd\n          HS[HS==\"Aa\"]<-1+1*gmd\n          HS[HS==\"aa\"]<-0\n          \n          Vg.L1<-sum(as.numeric(L1))\n          Vg.L2<-sum(as.numeric(L2))\n          Vg.F1<-sum(as.numeric(HS))\n          PS<-max(Vg.L2,Vg.L1)\n          PM<-(Vg.L2+Vg.L1)/2\n          \n          H<-(Vg.F1-PM)/PM*100\n          Hb<-(Vg.F1-PS)/PS*100\n          \n          LIST.11<-data.frame(Vg.L1,Vg.L2,Vg.F1,H,Hb)\n          names(LIST.11)<-c(\"  GV(L1)\",\"|  GV(L2)\",\"|  GV(F1)\",\"|  Heterosis(%)\",\"|  Heterobeltiosis(%)\")\n          \n          output<-round(LIST.11,1)\n          \n          return(output)\n          \n        }\n        \n        if(input$Lear11.1==0) return(cat(\"WARNING: 'Number of genes' should be different from zero\"))\n        \n        return(heterose(input$Lear11.1, input$Lear11.2, input$Lear11.3))\n        \n    })\n\n# #####################################################################################################################################################################################\n      #Lean.12\n      \n      tester1 <- function(p, r, a, d, f){\n        \n        vt <- function(p, r, a, d, f){  \n          estimation <- (p*(1-p)/2)*(1+f)*(a+(1-2*r)*d)^2  \n          return(estimation)\n        }\n        \n        par(mfrow=c(2,2))\n        curve(vt(p = x, r = r, a = a, d = d, f = f), from = 0, to = 1, xlab = \"p\", ylab = \"Genetic variablity\", col = \"red\")\n        curve(vt(p = p, r = x, a = a, d = d, f = f), from = 0, to = 1, xlab = \"r\", ylab = \"Genetic variablity\", col = \"red\")\n        curve(vt(p = p, r = r, a = a, d = x, f = f), from = 0, to = 2, xlab = \"d\", ylab = \"Genetic variablity\", col = \"red\")\n        curve(vt(p = p, r = r, a = a, d = d, f = x), from = 0, to = 1, xlab = \"F\", ylab = \"Genetic variablity\", col = \"red\")\n        \n        \n      }\n      \n      tester2 <- function(p, r, a, d, f){\n        \n        vt <- function(p, r, a, d, f){  \n          estimation <- (p*(1-p)/2)*(1+f)*(a+(1-2*r)*d)^2  \n          return(estimation)\n        }\n        \n        vt.est <- vt(p = p, r = r, a = a, d = d, f = f)\n        names(vt.est)<-\"Genetic variability\"\n        \n        \n        return(vt.est)\n      }\n      \n      output$cont.Lear.12 <- renderPlot({\n        \n        p<-input$Lear12.1\n        r<-input$Lear12.2\n        a<-input$Lear12.3\n        d<-input$Lear12.4\n        f<-input$Lear12.5\n        \n        tester1(p, r, a, d, f)\n        \n      })\n      \n      output$cont.Lear.12.1 <- renderPrint({\n        \n        p<-input$Lear12.1\n        r<-input$Lear12.2\n        a<-input$Lear12.3\n        d<-input$Lear12.4\n        f<-input$Lear12.5\n        \n        return(tester2(p, r, a, d, f))\n        \n      })\n      \n# #####################################################################################################################################################################################\n      #Lean.13\n      \n      n.gen1 <- function(q, s){\n        \n        ng <- function(q, s){(q - s)/(q*s)}\n        \n        curve(ng(q = q, s = x), from = 1, to = 0, xlab = \"Selection intensity\", ylab = \"Number of generations\", col = \"red\")\n        \n        generations <- ng(q, s)\n        return(generations)\n        \n      }\n      \n      n.gen2 <- function(q, s){\n        \n        ng <- function(q, s){(q - s)/(q*s)}\n        \n        generations <- ng(q, s)\n        names(generations)<-\"Generations to eliminate 'a':\"\n        \n        return(generations)\n      }\n      \n      out.Lear.13.1<-reactive({\n        \n        q<-input$Lear13.1\n        s<-input$Lear13.2\n\n        treze<-c(q,s)\n        return(treze)\n        \n      })\n      \n      output$cont.Lear.13 <- renderPlot({\n        \n        treze<-out.Lear.13.1()\n        if(treze[1]==0){plot.new()}\n        else(n.gen1(treze[1],treze[2]))\n        \n      })\n\n      output$cont.Lear.13.1 <- renderPrint({\n        \n        treze<-out.Lear.13.1()\n        if(treze[1]==0){return(cat(\"WARNING: 'q' shoud be different from zero\"))}\n        else(n.gen2(treze[1],treze[2]))\n        \n      })\n      \n            \n# #####################################################################################################################################################################################\n      #Lean.14\n      \n      RSi1 <- function(hx, rxy, sel, size){\n        \n        i <- NULL\n        p <- sel/size\n        i.std <- dnorm(qnorm(p))/p\n        Ac <- sqrt(hx)\n        \n        p2 <- (sel + 1/2)/(size + sel / (2 * size))\n        i.s <- dnorm(qnorm(p2))/p2\n        \n        if (size >= 1000) {i <- i.std}\n        if (size < 1000) {i <- i.s}\n        \n        response <- function(Ac = Ac, i = i, rxy = rxy){\n          gs <- i*Ac*rxy\n        }\n        \n        curve(response(Ac = x, rxy = rxy, i = i), from = 0, to = 1, xlab = \"parameter\", ylab = \"Indirect response (additive deviation)\", col = \"red\")\n        curve(response(Ac = Ac, rxy = x, i = i), from = 0, to = 1, xlab = \"parameter\", ylab = \"Indirect response (additive deviation)\", col = \"blue\", add = TRUE)\n        #pos <- NULL\n        #if (size >= 10000) {pos <- 1}\n        #if (size >= 50 & size < 10000) {pos <- .7}\n        #if (size < 50) {pos <- .3}\n        legend(\"bottom\", xpd = TRUE, bty = \"n\", horiz = TRUE, c(\"Accuracy\", \"Corr.xy\"), pch=c(1,1), text.col = c(\"red\", \"blue\"), cex =1)\n        \n        \n        GS <- response(Ac, i, rxy)\n        return(GS)\n        \n      }\n      \n      RSi2 <- function(hx, rxy, sel, size){\n        \n        i <- NULL\n        p <- sel/size\n        i.std <- dnorm(qnorm(p))/p\n        Ac <- sqrt(hx)\n        \n        p2 <- (sel + 1/2)/(size + sel / (2 * size))\n        i.s <- dnorm(qnorm(p2))/p2\n        \n        if (size >= 1000) {i <- i.std}\n        if (size < 1000) {i <- i.s}\n        \n        response <- function(Ac = Ac, i = i, rxy = rxy){\n          gs <- i*Ac*rxy\n        }\n        \n        GS <- response(Ac, i, rxy)\n        names(GS) <- \"Response to Indirect Selection\"\n        \n        return(GS)\n        \n      }\n      \n      output$cont.Lear.14 <- renderPlot({\n        \n        hx <- input$Lear14.1\n        rxy <- input$Lear14.2\n        size <- input$Lear14.3\n        sel <- input$Lear14.4\n        \n        if(size==0){plot.new()}\n        else(RSi1(hx, rxy, sel, size))\n        \n      })\n      \n      output$cont.Lear.14.1 <- renderPrint({\n        \n        hx <- input$Lear14.1\n        rxy <- input$Lear14.2\n        sel <- input$Lear14.4\n        size <- input$Lear14.3\n        \n        if(size==0){return(\"Number of individuals evaluated should be different from zero\")}\n        else(return(RSi2(hx, rxy, sel, size)))\n        \n      })\n      \n# #####################################################################################################################################################################################      \n      #Lean.15\n        \n      output$cont.Lear.15 <- renderPrint({\n        \n        n <- input$Lear15.1\n        i <- input$Lear15.2\n        h <- input$Lear15.3\n     \n      res.effect <- function(n, i, h){\n          \n          i <- i/100*n  \n          se <- sqrt(1/h - 1)\n          \n          ee <- function(n, i, h){\n            \n            g <- as.data.frame(rnorm(n, 0, 1))\n            set.seed(NULL)\n            rownames(g) <- paste(\"T\", 1:n, sep = \"\")\n            colnames(g)[1] <- \"genotype\" \n            \n            e <- as.data.frame(rnorm(n, 0, se))\n            set.seed(NULL)\n            rownames(e) <- paste(\"T\", 1:n, sep = \"\")\n            colnames(e)[1] <- \"environment\" \n            p <- g + e\n            colnames(p) <- \"phenotype\"\n            jointdata <- cbind(p, g, e)\n            jointdata$gid <- rownames(g)\n            \n            selected <- jointdata[order(jointdata[,1], decreasing = TRUE)[1:i],\"gid\"]\n            best <- jointdata[order(jointdata[,2], decreasing = TRUE)[1:i], \"gid\"]\n            left <- best[!jointdata[order(jointdata[,2], decreasing = TRUE)[1:i], \"gid\"] %in% selected]\n            pull <- selected[!selected %in% best]\n            \n            output <- t(data.frame(\n              \"Real accuracy\" = sum(selected %in% jointdata[order(jointdata[,2], decreasing = TRUE)[1:i], \"gid\"])/length(selected),\n              \"Estimated accuracy\" = round(sqrt(h),2),\n              \"Residual on wrong selected\" = round(mean(jointdata[pull,3]),2), #foram beneficados pelo ambiente em 3.10\n              \"Residual on wrong discarted\" = round(mean(jointdata[left, 3]),2),\n              \"Residual on right discarted\" = round(mean(jointdata[selected,3]),2),\n              \"GV of wrong selected\" = round(mean(jointdata[pull,2]),2),\n              \"GV of wrong discarted\" = round(mean(jointdata[left, 2]),2), # esta dando maior que o de baixo, o que indica que estamos eleinando coisas boas!\n              \"GV of right selected\" = round(mean(jointdata[selected,2]),2)\n            )\n            )\n            \n            colnames(output) <- \"Estimate\"\n            \n            return(output)\n          }\n          \n          out <- ee(n, i, h)\n          return(out)\n        }\n        \n       \n      if(input$Lear15.1==0){return(cat(\"WARNING: 'Number of individuals evaluated' should be be different from zero \"))}\n      else(return(res.effect(n, i, h)))\n      \n        \n      })\n      \n      \n# #####################################################################################################################################################################################            \n      #Lean.16\n      \n      replicates1 <- function(plots, sel, rep, h){\n        Cj <- plots/rep\n        \n        add.rep <- function(plots, sel, rep, h){\n          v <- sel/plots\n          Cj <- plots/rep\n          vj <- sel/Cj\n          zo <- qnorm(v, lower.tail = F)\n          zj <- qnorm(vj, lower.tail = F)\n          RS <- (exp(-.5*(zj^2 - zo^2)) / rep * sqrt(rep/(1 + h*(rep - 1))) - 1)*100\n          \n          return(RS)\n          \n        }\n        \n        plot(y = add.rep(plots = plots, sel = sel, rep = 1:5, h = h), x = 1:5, xlab = \"Number of replicates\", ylab = \"Effect on RS (%)\", col = \"red\", type = \"l\")\n        \n        \n        RSres <- add.rep(plots, sel, rep, h)\n        \n        return(cat( rep, \"replicates increase\", round(RSres, 2), \"% the RS\"))\n        \n      }\n      \n      replicates2 <- function(plots, sel, rep, h){\n        Cj <- plots/rep\n        \n        add.rep <- function(plots, sel, rep, h){\n          v <- sel/plots\n          Cj <- plots/rep\n          vj <- sel/Cj\n          zo <- qnorm(v, lower.tail = F)\n          zj <- qnorm(vj, lower.tail = F)\n          RS <- (exp(-.5*(zj^2 - zo^2)) / rep * sqrt(rep/(1 + h*(rep - 1))) - 1)*100\n          \n          return(RS)\n        }\n\n        \n        RSres <- add.rep(plots, sel, rep, h)\n        \n        return(cat( rep, \"replicates increase\", round(RSres, 2), \"% the RS\"))\n        \n      }\n      \n      \n      out.Lear.16.1<-reactive({\n        \n      rep<-input$Lear16.1\n      plots<-input$Lear16.2\n      sel<-input$Lear16.3\n      h<-input$Lear16.4\n      \n      \n      a1<-c(rep,plots,sel,h)\n        return(a1)\n      \n      })\n      \n      output$cont.Lear.16 <- renderPlot({\n        \n        a1<-out.Lear.16.1()\n        if(0%in%a1|a1[2]<=a1[3]){plot.new()}\n        else(replicates1(a1[2],a1[3],a1[1],a1[4]))\n        \n      })\n      \n      output$cont.Lear.16.1 <- renderPrint({\n        \n        \n        \n        a1<-out.Lear.16.1()\n        if(a1[2]<=a1[3]){return(cat(\"WARNING: Values should be different from zero and the number of plots should be greater than the number of genotypes selected\"))}\n        else(return(replicates2(a1[2],a1[3],a1[1],a1[4])))\n        \n      })\n      \n# #####################################################################################################################################################################################                  \n      #Lean.17\n      \n      budget1 <- function(size, sel, h, rep, time, cost){\n        \n        internal <- function(size, sel, h, rep, time, cost){\n          \n          i <- NULL\n          p <- sel/size\n          i.std <- dnorm(qnorm(p))/p\n          \n          p2 <- (sel + 1/2)/(size + sel / (2 * size))\n          i.s <- dnorm(qnorm(p2))/p2\n          \n          if (size >= 1000) {i <- i.std}\n          if (size < 1000) {i <- i.s}\n          \n          Vg <- h\n          Ve <- (1-h)*rep \n          h2 <- Vg/(Vg+Ve/rep)\n          \n          Ac <- sqrt(h2)\n          RS <- i*Ac*sqrt(Vg) \n          RS.t <- RS/time\n          Total.cost <- size*cost*rep\n          How.fair <- RS.t/Total.cost\n          output <- How.fair\n          return(output)\n        }\n        \n        par(mfrow = c(1,3))  \n        curve(internal(size = size, sel = sel, h = h, rep = x, time = time, cost = cost), from = 1, to = 5, col = \"red\", xlab = \"Number of replicates\", ylab = \"Gain/Cost\")\n        curve(internal(size = size, sel = sel, h = h, rep = rep, time = x, cost = cost), from = .2, to = 7, col = \"red\", xlab = \"Years per cicle\", ylab = \"Gain/Cost\")  \n        curve(internal(size = size, sel = sel, h = x, rep = rep, time = time, cost = cost), from = 0, to = 1, col = \"red\", xlab = \"Heritability\", ylab = \"Gain/Cost\")\n        \n        balance <- internal(size, sel, h, rep, time, cost)\n        return(cat(\"The ratio between genetic gain and the total cost per cicle of selection is\", balance))\n        \n      }\n      \n      budget2 <- function(size, sel, h, rep, time, cost){\n        \n        internal <- function(size, sel, h, rep, time, cost){\n          \n          i <- NULL\n          p <- sel/size\n          i.std <- dnorm(qnorm(p))/p\n          \n          p2 <- (sel + 1/2)/(size + sel / (2 * size))\n          i.s <- dnorm(qnorm(p2))/p2\n          \n          if (size >= 1000) {i <- i.std}\n          if (size < 1000) {i <- i.s}\n          \n          Vg <- h\n          Ve <- (1-h)*rep \n          h2 <- Vg/(Vg+Ve/rep)\n          \n          Ac <- sqrt(h2)\n          RS <- i*Ac*sqrt(Vg) \n          RS.t <- RS/time\n          Total.cost <- size*cost*rep\n          How.fair <- RS.t/Total.cost\n          output <- How.fair\n          return(output)\n        }\n        \n        balance <- internal(size, sel, h, rep, time, cost)\n        return(cat(\"Genetic gain / total cost =\", balance))\n        \n      }\n      \n      output$cont.Lear.17 <- renderPlot({\n        \n        size<-input$Lear17.1\n        sel<-input$Lear17.2\n        h<-input$Lear17.3\n        rep<-input$Lear17.4\n        time<-input$Lear17.5\n        cost<-input$Lear17.6\n        \n        if(input$Lear17.1==0|input$Lear17.6==0){return(NULL)}\n        \n        budget1(input$Lear17.1, input$Lear17.2, \n                input$Lear17.3, input$Lear17.4,\n                input$Lear17.5, input$Lear17.6)\n        \n      })\n      \n      output$cont.Lear.17.1 <- renderPrint({\n        \n        size<-input$Lear17.1\n        sel<-input$Lear17.2\n        h<-input$Lear17.3\n        rep<-input$Lear17.4\n        time<-input$Lear17.5\n        cost<-input$Lear17.6\n        \n        if(input$Lear17.1==0|input$Lear17.6==0){return(\"'Number of genotypes evaluated' and 'Cost to evaluate one plot' should be different from zero\")}\n        \n        return(budget2(input$Lear17.1, input$Lear17.2, \n                       input$Lear17.3, input$Lear17.4,\n                       input$Lear17.5, input$Lear17.6)) # qual a diferença de colocar direto isso e o nome?\n        \n      })\n      \n# #####################################################################################################################################################################################                        \n      #Lean.18\n      \n      output$cont.Lear.18 <- renderPrint({\n      \n        output$ui.lear18.1 <- renderUI({  \n          \n          sliderInput(\"Lear18.4\", \"Frequency of haplotype ab\", min=0, max=1, value=(1-(input$Lear18.1+input$Lear18.2+input$Lear18.3)))\n          \n        })\n        \n        output$ui.lear18.2 <- renderUI({  \n        \n          sliderInput(\"Lear18.6\", \"Frequency of a\", min=0, max=1, value=(1-input$Lear18.5))\n          \n        })\n        \n        output$ui.lear18.3 <- renderUI({  \n          \n          sliderInput(\"Lear18.8\", \"Frequency of b\", min=0, max=1, value=(1-input$Lear18.7))\n          \n        })\n        \n    \n        AB<-input$Lear18.1\n        Ab<-input$Lear18.2\n        aB<-input$Lear18.3\n        ab<-input$Lear18.4\n        A<-input$Lear18.5\n        a<-input$Lear18.6\n        B<-input$Lear18.7\n        b<-input$Lear18.8\n          \n          \n      LD <- function(AB, Ab, aB, ab, A, a, B, b){\n        \n        D <- AB*ab - Ab*aB\n        \n        phase <- NULL\n        \n        if (D > 0) {phase <- paste(\"The loci tend to be in cis because D is positive =\", D)}\n        if (D < 0) {phase <- paste(\"The loci tend to be in trans because D is negative =\", D)}\n        if (D == 0) {phase <- paste(\"The loci are independent because D is\", D)}\n        \n        r2 <- round(D^2/(A*a*B*b),2)\n        \n        output <- list(phase,r2)\n        names(output) <- c(\"Phase\", \"LD\")\n        \n        return(output)\n      }\n      \n      if((AB+Ab+aB+ab)!=1){return(\"The sum of haplotypes must be equal to 1\")}\n      if((A+a)!=1){return(\"The sum of alleles from locus A must be equal to 1\")}\n      if((B+b)!=1){return(\"The sum of alleles from locus B must be equal to 1\")}\n      \n      return(LD(AB, Ab, aB, ab, A, a, B, b))\n      \n      })\n      \n# #####################################################################################################################################################################################                        \n      #Lean.19\n      \n      generations1 <- function(LDlose, c){\n        \n        overtime <- function(LDlose, c){round(log(1 - LDlose/100) / log(1 - c), 1)}\n        \n        t <- overtime(LDlose, c) \n        \n        output <- c(paste(t, \"cycles to lose\", LDlose,\"% of the LD\"))\n        \n        return(output)\n      }\n      \n      generations2 <- function(LDlose, c){\n        \n        overtime <- function(LDlose, c){round(log(1 - LDlose/100) / log(1 - c), 1)}\n        \n        t <- overtime(LDlose, c) \n        \n        par(mfrow=c(1,2))\n        curve(overtime(LDlose = LDlose, c = x), from = 0, to = .5, xlab = \"recombination fraction\", ylab = paste(\"Generations to lose\", LDlose, \"% of the LD\"), col = \"red\")\n        curve(overtime(LDlose = x, c = c), from = 0, to = 100, xlab = \"LD lost (%)\", ylab = paste(\"Generations to lose\", LDlose, \"% of the LD\"), col = \"red\")\n        \n        }\n      \n      output$cont.Lear.19 <- renderPlot({\n        \n        if(input$Lear19.1==0|input$Lear19.2==0){(plot.new())}\n        else(generations2(input$Lear19.1, input$Lear19.2))\n        \n      })\n      \n      output$cont.Lear.19.1 <- renderPrint({\n        \n        return(generations1(input$Lear19.1, input$Lear19.2))\n      \n      })\n      \n######################################################################################################################################################################################      \n      \n# Phenotipic Breeding\n      \n######################################################################################################################################################################################\n      \n      # SubItem 11\n      \n      out.11.1 <- reactive({\n        \n        if(input$ex.11!=FALSE){\n          TABE.1<-read.table(\"ex11.dat\",header = TRUE, sep = \"\\t\")\n          return(TABE.1)}\n        \n        inFile <- input$file1\n        \n        if (is.null(inFile))\n          return(NULL)\n        \n        TABE<-read.table(inFile$datapath, header=input$header, sep=input$sep, \n                         quote=input$quote)\n        \n        #if(is.na(TABE[dim(TABE)[1],])){stop(\"Your last row has problem!\")}\n        \n        \n        return(TABE)\n      })\n      \n      out.11.2 <- reactive({\n        \n        switch(input$table.1,\n               \"Table\" = out.11.1(),\n               \"Data Structure\" = str(out.11.1()),\n               \"Names\"=names(out.11.1()))\n      })\n      \n      output$contents11 <- renderPrint({\n        \n        if(input$info.11!=TRUE)\n          \n          return (out.11.2())\n        \n        else \n          \n          includeScript(\"BeBreederDataFileInformation.txt\")\n        \n      })\n      \n# #####################################################################################################################################################################################\n      # SubItem 12\n      \n      out.12.1 <- reactive({\n        \n        if(is.null(out.11.1()))\n          \n          return(NULL)\n        \n        data12<-out.11.1()\n        \n        for(i in 1:dim(data12)[2]){\n          \n          if(names(data12)[i]==\"y\")\n            \n            data12$y<-as.numeric(as.character(data12$y))\n          \n          else\n            \n            data12[,i]<-as.factor(data12[,i])\n        }\n        \n        \n        if(input$res.12.name!=FALSE)\n          \n          return(names(out.11.1()))\n        \n        out.mod<-reactive({\n          \n          if(input$res.12.run){\n            formula(isolate(input$model))\n          }\n          else\n            NULL\n        })\n        \n        if(is.null(out.mod()))\n          return(NULL)\n        \n        inMod <- out.mod()\n        \n        \n        if(input$ml != TRUE){\n          mod.12<-lmer(inMod, REML=FALSE, data=data12, na.action =  na.omit)\n        }\n        \n        if(input$ml != FALSE){\n          mod.12<-lmer(inMod, REML=TRUE, data=data12, na.action =  na.omit)\n        }\n        \n        PM<-as.matrix(cbind(order(ranef(mod.12)$Genotype,decreasing =T),mean(data12$y)+ranef(mod.12)$Genotype[order(ranef(mod.12)$Genotype,decreasing =T),]))\n        colnames(PM)<-c(\"Genotype\",\"Predicted\")\n        \n        if(input$res.12.fix != TRUE){\n          PM.1<-PM[1:round((dim(PM)[1])*input$res.12.2/100,0),]\n          BLUP.12<-ranef(mod.12)\n          BLUE.12<-NULL\n          AM.12<-NULL\n        }\n        else {\n          PM.1<-NULL\n          BLUP.12<-ranef(mod.12)\n          BLUP.12<-BLUP.12[names(BLUP.12)!=\"Genotype\"]\n          BLUE.12<-as.matrix(tapply(data12$y,data12$Genotype,mean)-mean(data12$y))\n          colnames(BLUE.12)<-c(\"BLUE\")\n          AM.12<-as.matrix(tapply(data12$y,data12$Genotype,mean))\n          colnames(AM.12)<-c(\"Adj. Means\")\n        }\n        \n        MEAN.12<- as.data.frame(as.numeric(fixef(mod.12)[1]))\n        colnames(MEAN.12)<-c(\"Mean\")\n        \n        ANOVA.12<-anova(mod.12,test=\"F\")\n        \n        switch(input$res.12.1,\n               \"Summary\" = summary(mod.12),\n               \"ANOVA\"= ANOVA.12,\n               \"Analysis of Deviance\"= rand(mod.12),\n               \"BLUP\" = BLUP.12,\n               \"BLUE\" = BLUE.12,\n               \"Adjusted Means\"= AM.12,\n               \"Mean\" = MEAN.12,\n               \"Predicted Means\"= PM.1)\n        \n      })\n      \n      \n      output$contents12 <- renderPrint({\n        \n        if(input$info.12!=TRUE)\n          \n          return(out.12.1())\n        \n        else\n          \n          includeScript(\"BeBreederEstatisticalInformation.txt\")\n      })\n      \n      \n      output$downloadData12 <- downloadHandler(\n        filename = function() { \n          paste(input$name.txt.12,'.txt', sep = \"\") \n        },\n        content = function(file) {\n          write.table(out.12.1(), file, sep=\"\\t\")\n        }\n      )\n      \n# ##############################################################################################################################################################################\n      # SubItem 13\n      \n      out.13.0 <- reactive({\n        \n        if(input$ex.13!=FALSE){\n          TABE.1<-read.table(\"ex13.dat\",header = TRUE, sep = \"\\t\")\n          return(TABE.1)\n        }\n        \n        inFile13 <- input$file13\n        \n        if (is.null(inFile13))\n          return(NULL)\n        \n        TABE<-read.table(inFile13$datapath, header=input$header13, sep=input$sep13, \n                         quote=input$quote13,stringsAsFactors=FALSE)\n        \n        return(TABE)\n      })\n      \n      output$contents131 <- renderPrint({\n        \n        if(input$info.131!=TRUE)\n          \n          return (out.13.0())\n        \n        else \n          \n          includeScript(\"BeBreederDiallel.txt\")\n        \n      })\n      \n      \n      out.13.1<-reactive({\n        \n        data<-out.13.0()\n        \n        if (is.null(data))\n          return(NULL)\n        \n        NAME<-names(data)\n        \n        data.F<-as.data.frame(data)\n        data1<-NULL\n        data2<-NULL\n        \n        for(i in 1:dim(data.F)[1]){\n          \n          if(data.F$Genitor1[i]!=data.F$Genitor2[i])\n          {data2<-rbind(data2,data.F[i,])}\n          else\n          {data1<-rbind(data1,data.F[i,])}\n        }\n        \n        \n        for(i in 1:dim(data.F)[2]){\n          \n          if(names(data.F)[i]==\"y\")\n            \n            data.F$y<-as.numeric(as.character(data.F$y))\n          \n          else\n            \n            data.F[,i]<-as.factor(data.F[,i])\n        }\n        \n        \n        out.13.data<-reactive({\n          if(is.null(data1))\n            return(NULL)\n          \n          data1<-as.data.frame(data1)\n          \n          \n          for(i in 1:dim(data1)[2]){\n            \n            if(names(data1)[i]==\"y\")\n              \n              data1$y<-as.numeric(as.character(data1$y))\n            \n            else\n              \n              data1[,i]<-as.factor(data1[,i])\n          }\n          \n          Parental<-as.factor(data1$Genitor1)\n          data1<-cbind(data1,Parental)\n          return(data1)\n        })\n        \n        data1<-out.13.data()\n        \n        data2<-as.data.frame(data2)\n        \n        for(i in 1:dim(data2)[2]){\n          \n          if(names(data2)[i]==\"y\")\n            \n            data2$y<-as.numeric(as.character(data2$y))\n          \n          else\n            \n            data2[,i]<-as.factor(data2[,i])\n        }\n        \n        LISTA13<-list(data1,data2)\n        return(LISTA13)\n        \n      })\n      \n####################################################################\n      \n      Heterosis<-function(HET,MAL,FEM,GEN,data2){\n        a<-rownames(HET)\n        b<-NULL\n        c<-NULL\n        d<-NULL\n        m<-cbind(rownames(MAL),MAL)\n        f<-cbind(rownames(FEM),FEM)\n        g<-cbind(rownames(GEN),GEN)\n        \n        for(i in 1:length(a)){\n          \n          b<-rbind(b,(strsplit(a,\":\")[[i]][1]))\n          c<-rbind(c,(strsplit(a,\":\")[[i]][2]))\n          d<-rbind(d,(as.matrix(HET))[i,])\n          e<-cbind(b,c,d)\n        }\n        \n        D<-cbind(paste(data2$Genitor1,data2$Genitor2,sep = \":\"),data2$y)\n        \n        hib<-sort(unique(D[,1]),decreasing = FALSE)\n        \n        y.obs<-NULL\n        \n        for(i in 1:length(hib)){\n          y.obs<-rbind(y.obs,cbind(hib[i],round(mean(as.numeric(D[,2][which(hib[i]==D[,1])]),na.rm =TRUE),3)))\n        }\n        \n        \n        y.pred<-NULL\n        \n        for(i in 1:length(e[,1])){\n          y.pred<-rbind(y.pred,cbind(a[i],sum(round(m[,2][e[i,1]==m[,1]],3),round(f[,2][e[i,2]==f[,1]],3),round(as.numeric(e[i,3]),3))))\n        }\n        \n        if(g==0)  {y.pred.gen<-NULL\n        Y.PRED.GEN<-NULL\n        cor.y.g<-NULL\n        }\n        \n        if(g!=0){\n          for(i in 1:length(e[,1])){\n            y.pred.gen<-rbind(y.pred,cbind(a[i],sum(round(g[,2][e[i,1]==g[,1]],3),round(g[,2][e[i,2]==g[,1]],3),round(as.numeric(e[i,3]),3))))\n            Y.PRED.GEN<-as.data.frame(cbind(y.obs,y.pred.gen[,2]))\n            colnames(Y.PRED.GEN)<-c(\"Hybrid\",\"y.Obs\",\"y.predicted\")\n            cor.y.g<-cor(as.numeric(as.character(Y.PRED.GEN[,2])),as.numeric(as.character(Y.PRED.GEN[,3])))\n          }}\n        \n        \n        Y.PRED<-as.data.frame(cbind(y.obs,y.pred[,2]))\n        colnames(Y.PRED)<-c(\"Hybrid\",\"y.Obs\",\"y.predicted\")\n        \n        cor.y<-cor(as.numeric(as.character(Y.PRED[,2])),as.numeric(as.character(Y.PRED[,3])))\n        \n        g.1<-NULL\n        \n        for(i in 1:length(unique(e[,1]))){\n          \n          g.1.1<-unique(e[,1])[i]\n          g.1.2<-mean(round(as.numeric(e[,3][which(unique(e[,1])[i]==e[,1])]),3),na.rm =TRUE)\n          g.1.3<-range(round(as.numeric(e[,3][which(unique(e[,1])[i]==e[,1])]),3))[1]\n          g.1.4<-range(round(as.numeric(e[,3][which(unique(e[,1])[i]==e[,1])]),3))[2]\n          \n          g.1<-rbind(g.1,cbind(g.1.1,g.1.2,g.1.3,g.1.4))\n        }\n        \n        g.2<-NULL\n        \n        for(i in 1:length(unique(e[,2]))){\n          \n          g.2.1<-unique(e[,2])[i]\n          g.2.2<-mean(round(as.numeric(e[,3][which(unique(e[,2])[i]==e[,2])]),3),na.rm =TRUE)\n          g.2.3<-range(round(as.numeric(e[,3][which(unique(e[,2])[i]==e[,2])]),3))[1]\n          g.2.4<-range(round(as.numeric(e[,3][which(unique(e[,2])[i]==e[,2])]),3))[2]\n          \n          g.2<-rbind(g.2,cbind(g.2.1,g.2.2,g.2.3,g.2.4))\n        }\n        \n        g.0<-NULL\n        \n        GENOT<-as.vector(unique(rbind(as.matrix(unique(e[,1])),as.matrix(unique(e[,2])))))\n        \n        for(i in 1:length(GENOT)){\n          \n          g.0.1<-GENOT[i]\n          g.0.2<-mean(round(as.numeric(e[,3][which(GENOT[i]==e[,1]|GENOT[i]==e[,2])]),3),na.rm =TRUE)\n          g.0.3<-range(round(as.numeric(e[,3][which(GENOT[i]==e[,1]|GENOT[i]==e[,2])]),3))[1]\n          g.0.4<-range(round(as.numeric(e[,3][which(GENOT[i]==e[,1]|GENOT[i]==e[,2])]),3))[2]\n          \n          g.0<-rbind(g.0,cbind(g.0.1,g.0.2,g.0.3,g.0.4))\n        }\n        \n        G<-as.matrix(rbind(g.1,g.2))\n        colnames(G)<-c(\"Parental\",\"Heterosis\",\"Min Value\",\"Max Value\")\n        G<-as.data.frame(G)\n        \n        G1<-as.matrix(g.0)\n        colnames(G1)<-c(\"Parental\",\"Heterosis\",\"Min Value\",\"Max Value\")\n        G1<-as.data.frame(G1)\n        \n        return(list(G,Y.PRED,cor.y,Y.PRED.GEN,cor.y.g,G1))\n      }\n      \n# #########################################################################\n      # Parcial Diallel\n      \n      out.132.1<-reactive({\n        \n        data1<-out.13.1()[[1]]\n        data2<-out.13.1()[[2]]\n        \n        if (is.null(data2))\n          return(NULL)\n        \n        out.13.model<-reactive({\n          if(is.null(data1))\n            return(NULL)\n          \n          if(input$res.13.1==\"RBD - One Trial\"){\n            mod.2<-lmer(formula(y ~ Block+(1|Parental)),REML=TRUE,data = data1, na.action =  na.omit)\n          }\n          if(input$res.13.1==\"RBD - Several Trials\"){\n            mod.2<-lmer(formula(y ~ Trial+Trial:Block+(1|Parental)+(1|Parental:Trial)),REML=TRUE,data = data1, na.action =  na.omit)\n          }\n          return(mod.2)\n        })\n        \n        mod.2<-out.13.model()\n        \n        if(input$res.13.1==\"RBD - One Trial\"){\n          mod.1<-lmer(formula(y ~ Block+(1|Genitor1) + (1|Genitor2) + (1|Genitor1:Genitor2)), REML=TRUE, data = data2, na.action =  na.omit)\n        }\n        if(input$res.13.1==\"RBD - Several Trials\"){\n          mod.1<-lmer(formula(y ~ Trial+Trial:Block+(1|Genitor1) + (1|Genitor2) + (1|Genitor1:Genitor2)+(1|Genitor1:Trial)+(1|Genitor2:Trial)+(1|Genitor1:Genitor2:Trial)), REML=TRUE, data = data2, na.action =  na.omit)\n        }\n        \n        VAR.DOM<- 4*((VarCorr(mod.1)$'Genitor1:Genitor2'[1])^2)*(1-input$res.13.0)^2\n        VAR.ADI<- 2*((VarCorr(mod.1)$Genitor1[1])^2+(VarCorr(mod.1)$Genitor2[1])^2)*(1+input$res.13.0)\n        VAR.ADI.Genitor1<-4*((VarCorr(mod.1)$Genitor1[1])^2)*(1+input$res.13.0)\n        VAR.ADI.Genitor2<-4*((VarCorr(mod.1)$Genitor2[1])^2)*(1+input$res.13.0)\n        VAR.Trial.G<-(VarCorr(mod.1)$'Genitor1:Genitor2:Trial'[1][1])^2/nlevels(data2$Trial)\n        VAR.Trial.G1<-(VarCorr(mod.1)$'Genitor1:Trial'[1])^2/nlevels(data2$Trial)\n        VAR.Trial.G2<-(VarCorr(mod.1)$'Genitor2:Trial'[1])^2/nlevels(data2$Trial)\n        VAR.RES<-attr(VarCorr(mod.1),\"sc\")^2\n        \n        if(input$res.13.1==\"RBD - One Trial\"){\n          VAR.PHE<-sum(VAR.ADI,VAR.DOM,(VAR.RES/nlevels(data2$Block)))\n          GCA.S.1<-NULL\n          GCA.S.2<-NULL\n          SCA.S<-NULL\n        }\n        if(input$res.13.1==\"RBD - Several Trials\"){\n          VAR.PHE<-sum(VAR.ADI,VAR.DOM,(VAR.RES/(nlevels(data2$Trial)+nlevels(data2$Block))),VAR.Trial.G,VAR.Trial.G1,VAR.Trial.G2)\n          GCA.S.1<-round(ranef(mod.1)$'Genitor1:Trial',3)\n          colnames(GCA.S.1)<-c(\"GCA.1/S\")\n          GCA.S.2<-round(ranef(mod.1)$'Genitor2:Trial',3)\n          colnames(GCA.S.2)<-c(\"GCA.2/S\")\n          SCA.S<-round(ranef(mod.1)$'Genitor1:Genitor2:Trial',3)\n          colnames(SCA.S)<-c(\"SCA/S\")\n        }\n        \n        var.addit<-cbind(VAR.ADI.Genitor1,VAR.ADI.Genitor2)\n        colnames(var.addit)<-c(\"Va Genitor1\",\"Va Genitor2\")\n        var.addit<-as.data.frame(var.addit)\n        \n        HYB<-Heterosis(HET=(ranef(mod.1)$'Genitor1:Genitor2'),MAL=(ranef(mod.1)$Genitor1),FEM=(ranef(mod.1)$Genitor2),GEN = 0,data2 = data2)\n        \n        MEAN.13.1<-as.data.frame(as.numeric(fixef(mod.1)[1]))\n        colnames(MEAN.13.1)<-c(\"F1's Mean\")\n        \n        out.13.mean<-reactive({\n          LISTA<-list(NULL,NULL)\n          \n          if(is.null(data1))\n            return(LISTA)\n          \n          MEAN.13.2<-as.data.frame(as.numeric(fixef(mod.2)[1]))\n          colnames(MEAN.13.2)<-c(\"Parental Mean\")\n          MEAN.G.13<-MEAN.13.1-MEAN.13.2\n          colnames(MEAN.G.13)<-c(\"Average Heterosis\")\n          LISTA<-list(MEAN.13.2,MEAN.G.13)\n          return(LISTA)\n          \n        })\n        \n        MEAN.13.2<-out.13.mean()[[1]]\n        MEAN.G.13<-out.13.mean()[[2]]\n        GCA.1<-round(ranef(mod.1)$Genitor1,3)\n        colnames(GCA.1)<-c(\"GCA.1\")\n        GCA.2<-round(ranef(mod.1)$Genitor2,3)\n        colnames(GCA.2)<-c(\"GCA.2\")\n        SCA.1<-round(ranef(mod.1)$'Genitor1:Genitor2',3)\n        colnames(SCA.1)<-c(\"SCA\")\n        ADD.13<-as.data.frame(as.numeric(sqrt((2*VAR.DOM)/VAR.ADI)))\n        colnames(ADD.13)<-c(\"ADD\")\n        \n        switch(input$res.13.2,\n               \"F1's Mean\"= MEAN.13.1,\n               \"Parental Mean\"= MEAN.13.2,\n               #\"Summary\"=summary(mod.1),\n               \"ANOVA\"= anova(mod.1,test=\"F\"),\n               \"Analysis of Deviance\"= rand(mod.1),\n               \"GCA of Genitor 1\"= GCA.1,\n               \"GCA of Genitor 1 by Trial\"=GCA.S.1,\n               \"GCA of Genitor 2\"= GCA.2,\n               \"GCA of Genitor 2 by Trial\"=GCA.S.2,\n               \"SCA\"=SCA.1,\n               \"SCA by Trial\"=SCA.S,\n               \"Additive Variance\"= round(var.addit,3),\n               \"Dominance Variance\"= round(VAR.DOM,3),\n               \"Average Degree of Dominance\"= round(ADD.13,3),\n               \"Genotypic Coefficient of Variation for Genitor 1\"= (100*sqrt(VarCorr(mod.1)$Genitor1[1]))/sum(mean(GCA.1),mean(GCA.2),mean(SCA.1)),\n               \"Genotypic Coefficient of Variation for Genitor 2\"= (100*sqrt(VarCorr(mod.1)$Genitor2[1]))/sum(mean(GCA.1),mean(GCA.2),mean(SCA.1)),\n               \"Broad-sense Herdability\"= ((VAR.ADI/2)+(VAR.DOM/4))/(VAR.PHE),\n               \"Narrow-sense Herdability\"= (VAR.ADI/2)/(VAR.PHE),\n               \"Average Heterosis\"= MEAN.G.13,\n               \"Average Heterosis by Parental\"= HYB[[1]],\n               \"Predict Hybrid Value\"=HYB[[2]],\n               \"Prediction Ability\"=HYB[[3]]\n        )\n      })\n      \n      \n      \n      output$contents132 <- renderPrint({\n        \n        if(input$info.13!=TRUE)\n          \n          return (out.132.1())\n        \n        else\n          \n          includeScript(\"BeBreederDiallel.txt\")\n        \n      })\n      \n      \n      output$downloadData13 <- downloadHandler(\n        filename = function() {\n          paste(input$name.txt.13,'.txt', sep = \"\")\n        },\n        content = function(file) {\n          write.table(out.132.1(), file, sep=\"\\t\")\n        }\n      )\n      \n      ####################################################################\n      # Complete Diallel\n      \n      out.133.1<-reactive({\n        \n        data1<-out.13.1()[[1]]\n        data2<-out.13.1()[[2]]\n        \n        if (is.null(data2))\n          return(NULL)\n        \n        out.133.model<-reactive({\n          if(is.null(data1))\n            return(NULL)\n          \n          if(input$res.13.1==\"RBD - One Trial\"){\n            mod.2<-lmer(formula(y~ Block+(1|Parental)),REML=TRUE,data = data1, na.action =  na.omit)\n          }\n          if(input$res.13.1==\"RBD - Several Trials\"){\n            mod.2<-lmer(formula(y~Trial+Trial:Block+(1|Parental)+(1|Parental:Trial)),REML=TRUE,data = data1, na.action =  na.omit)\n          }\n          return(mod.2)\n        })\n        \n        mod.2<-out.133.model()\n        \n        if(input$res.133.1==\"RBD - One Trial\"){\n          y.1<-rbind(as.matrix(data2$y),as.matrix(data2$y))\n          Genitor<-rbind(as.matrix(data2$Genitor1),as.matrix(data2$Genitor2))\n          Block.1<-rbind(as.matrix(data2$Block),as.matrix(data2$Block))\n          \n          mod.1<-lmer(formula(y ~ Block+(1|Genitor1) + (1|Genitor2) + (1|Genitor1:Genitor2)), REML=TRUE, data = data2, na.action =  na.omit)\n          mod.1.2<-lmer(y.1 ~ Block.1+(1|Genitor), REML=TRUE, na.action =  na.omit)\n        }\n        if(input$res.133.1==\"RBD - Several Trials\"){\n          y.1<-rbind(as.matrix(data2$y),as.matrix(data2$y))\n          Genitor<-rbind(as.matrix(data2$Genitor1),as.matrix(data2$Genitor2))\n          Block.1<-rbind(as.matrix(data2$Block),as.matrix(data2$Block))\n          Trial.1<-rbind(as.matrix(data2$Trial),as.matrix(data2$Trial))\n          \n          mod.1<-lmer(formula(y ~ Block+Trial+(1|Genitor1) + (1|Genitor2) + (1|Genitor1:Genitor2)+(1|Genitor1:Trial)+(1|Genitor2:Trial)+(1|Genitor1:Genitor2:Trial)), REML=TRUE, data = data2, na.action =  na.omit)\n          mod.1.2<-lmer(y.1 ~ Trial.1+Trial.1:Block.1+(1|Genitor) + (1|Genitor:Trial.1), REML=TRUE, na.action =  na.omit)\n        }\n        \n        VAR.DOM<- as.data.frame(4*((VarCorr(mod.1)$'Genitor1:Genitor2'[1])^2)*(1-input$res.133.0)^2)\n        VAR.ADI<- as.data.frame(4*((VarCorr(mod.1.2)$Genitor[1])^2)*(1+input$res.133.0))\n        colnames(VAR.DOM)<-c(\"Vd Genitor\")\n        colnames(VAR.ADI)<-c(\"Va Genitor\")\n        VAR.Trial.G<-(VarCorr(mod.1)$'Genitor1:Genitor2:Trial'[1][1])^2/nlevels(data2$Trial)\n        VAR.Trial.G1<-(VarCorr(mod.1.2)$'Genitor:Trial'[1])^2/nlevels(data2$Trial)\n        #VAR.Trial.G2<-(VarCorr(mod.1)$'Genitor2:Trial'[1])^2/nlevels(data2$Trial)\n        VAR.RES<-attr(VarCorr(mod.1),\"sc\")^2\n        \n        if(input$res.133.1==\"RBD - One Trial\"){\n          VAR.PHE<-sum(VAR.ADI,VAR.DOM,(VAR.RES/nlevels(data2$Block)))\n          GCA.S<-NULL\n          SCA.S<-NULL\n        }\n        if(input$res.133.1==\"RBD - Several Trials\"){\n          VAR.PHE<-sum(VAR.ADI,VAR.DOM,(VAR.RES/(nlevels(data2$Trial)+nlevels(data2$Block))),VAR.Trial.G,VAR.Trial.G1)\n          GCA.S<-round(ranef(mod.1.2)$'Genitor:Trial.1',3)\n          colnames(GCA.S)<-c(\"GCA/S\")\n          SCA.S<-round(ranef(mod.1)$'Genitor1:Genitor2:Trial',3)\n          colnames(SCA.S)<-c(\"SCA/S\")\n        }\n        \n        HYB<-Heterosis(HET=(ranef(mod.1)$'Genitor1:Genitor2'),MAL=(ranef(mod.1)$Genitor1),FEM=(ranef(mod.1)$Genitor2),GEN =(ranef(mod.1.2)$Genitor),data2 = data2)\n        \n        MEAN.13.1<-as.data.frame(as.numeric(fixef(mod.1)[1]))\n        colnames(MEAN.13.1)<-c(\"F1`s Mean\")\n        \n        out.133.mean<-reactive({\n          LISTA<-list(NULL,NULL)\n          \n          if(is.null(data1))\n            return(LISTA)\n          \n          MEAN.13.2<-as.data.frame(as.numeric(fixef(mod.2)[1]))\n          colnames(MEAN.13.2)<-c(\"Parental mean\")\n          MEAN.G.13<-as.data.frame(MEAN.13.1-MEAN.13.2)\n          colnames(MEAN.G.13)<-c(\"Average Heterosis\")\n          LISTA<-list(MEAN.13.2,MEAN.G.13)\n          return(LISTA)\n          \n        })\n        \n        MEAN.13.2<-out.133.mean()[[1]]\n        MEAN.G.13<-out.133.mean()[[2]]\n        \n        GCA.1<-as.data.frame(round(ranef(mod.1.2)$Genitor,3))\n        colnames(GCA.1)<-c(\"GCA\")\n        SCA.1<-as.data.frame(round(ranef(mod.1)$'Genitor1:Genitor2',3))\n        colnames(SCA.1)<-c(\"SCA\")\n        ADD.13<-as.data.frame(as.numeric(sqrt((2*VAR.DOM)/VAR.ADI)))\n        colnames(ADD.13)<-c(\"ADD\")\n        \n        switch(input$res.133.2,\n               \"F1's Mean\"=MEAN.13.1,\n               \"Parental Mean\"=MEAN.13.2,\n               #\"Summary\"=summary(mod.1),\n               \"ANOVA\"=anova(mod.1.2),\n               \"Analysis of Deviance\"= rand(mod.1.2),\n               \"GCA\"= GCA.1,\n               \"GCA by Trial\"=GCA.S,\n               \"SCA\"=SCA.1,\n               \"SCA by Trial\"=SCA.S,\n               \"Additive Variance\"=round(VAR.ADI,3),\n               \"Dominance Variance\"=round(VAR.DOM,3),\n               \"Average Degree of Dominance\"=round(ADD.13,3),\n               \"Genitor's Genotypic Coefficient of Variation\"=(100*sqrt(VarCorr(mod.1.2)$Genitor[1]))/sum(mean(GCA.1),mean(SCA.1)),\n               \"Broad-sense Herdability\"=((VAR.ADI/2)+(VAR.DOM/4))/(VAR.PHE),\n               \"Narrow-sense Herdability\"=(VAR.ADI/2)/(VAR.PHE),\n               \"Average Heterosis\"= MEAN.G.13,\n               \"Heterosis by Parental\"=HYB[[6]],\n               \"Predict Hybrid Value\"=HYB[[4]],\n               \"Prediction Ability\"=HYB[[5]]\n               \n        )\n      })\n      \n# ##############################################################################################################################################################################\n      # SubItem 133\n      \n      \n      output$contents133 <- renderPrint({\n        \n        if(input$info.133!=TRUE)\n          \n          return (out.133.1())\n        \n        else\n          \n          includeScript(\"BeBreederDiallel.txt\")\n        \n      })\n      \n      \n      output$downloadData133 <- downloadHandler(\n        filename = function() {\n          paste(input$name.txt.133,'.txt', sep = \"\")\n        },\n        content = function(file) {\n          write.table(out.133.1(), file, sep=\"\\t\")\n        }\n      )\n      \n      \n# ##############################################################################################################################################################################\n      # SubItem 14\n      \n      out.14<-reactive({ \n        \n        if(input$ex.14!=FALSE){\n          IndSel.1<-read.table(\"ex14.dat\",header = TRUE, sep = \"\\t\")\n          return(IndSel.1)}\n        \n        inFile14 <- input$file14\n        \n        if (is.null(inFile14))\n          return(NULL)\n        \n        \n        IndSel<-read.table(inFile14$datapath, header=input$header.14, sep=input$sep.14, \n                           quote=input$quote.14)\n        \n        return(IndSel)\n        \n      })\n      \n      output$contents14.1<- renderPrint({\n        \n        \n        if(input$info.141!=TRUE)\n          \n          return(out.14())\n        \n        else \n          \n          includeScript(\"BeBreederDataIndexFile.txt\")\n      })\n      \n      out.14.1<-reactive({\n        \n        if(is.null(out.14()))\n          \n          return(NULL)\n        \n        IndSel<-out.14()\n        \n        if(input$res.14.name!=FALSE)\n          \n          return(names(IndSel))\n        \n        y<-as.numeric(unlist(strsplit(input$vec.14,\",\")))\n        \n        if(length(y)<(dim(IndSel)[2]-1)|length(y)>(dim(IndSel)[2]-1))\n          return(NULL)\n        \n        A<-scale(as.matrix(IndSel[,2:dim(IndSel)[2]]))\n        \n        Genotype<-as.matrix(IndSel[,1])\n        \n        IndSelec<-function(y,A,Genotype){\n          \n          IS<-y%*%t(A)\n          \n          Sel<-cbind(Genotype[order(IS, decreasing = T)],IS[order(IS, decreasing = T)])\n          return(Sel)\n        }\n        \n        INDSEL<-IndSelec(y,A,Genotype)\n        colnames(INDSEL)<-c(\"Genotype\",\"Index\")\n        INDSEL.1<-INDSEL[1:(dim(INDSEL)[1]*input$res.14/100),]\n        \n        return(INDSEL.1)\n      })\n      \n      output$contents14.2<- renderPrint({\n        \n        if(input$info.142!=TRUE)\n          \n          return(out.14.1())\n        \n        else \n          \n          includeScript(\"BeBreederDataIndexAnalyse.txt\")\n      })\n      \n      \n      output$downloadData14 <- downloadHandler(\n        filename = function() { \n          paste(input$name.txt.14,'.txt',sep=\"\") \n        },\n        content = function(file) {\n          write.table(out.14.1(), file, sep=\"\\t\")\n        }\n      )\n      \n# ##############################################################################################################################################################################\n      # SubItem 16\n      \n      out.16.0 <- reactive({\n        \n        if(input$ex.16!=FALSE){\n          TABE16.1<-read.table(\"ex14.dat\",header = TRUE, sep = \"\\t\")\n          return(as.data.frame(TABE16.1))}\n        \n        inFile16 <- input$file16\n        \n        if (is.null(inFile16))\n          return(NULL)\n        \n        TABE16<-read.table(inFile16$datapath, header=input$header16, sep=input$sep16, \n                           quote=input$quote16)\n        \n        return(as.data.frame(TABE16))\n      })\n      \n      output$contents161 <- renderPrint({\n        \n        if(input$info.161!=TRUE)\n          \n          return (out.16.0())\n        \n        else \n          \n          includeScript(\"BeBreederDataPathAnalyse.txt\")\n        \n      })\n      \n      \n      out.16.1<-reactive({\n        \n        if(is.null(out.16.0()))\n          \n          return(NULL)\n        \n        data16<-as.matrix(out.16.0())\n        name16<-names(out.16.0())\n        \n        if(input$res.16.name!=FALSE)\n          \n          return(list(name16))\n        \n        y.test<-input$name.16\n        \n        if(!(y.test%in%name16))\n          \n          return(NULL)\n        \n        Main.Trait<-data16[,which(name16==input$name.16)]\n        x16<-data16[,-c(which(name16==\"Genotype\"),which(name16==input$name.16))]\n        \n        cor.y<-correlation(Main.Trait,x16)$correlation\n        cor.x<-correlation(x16)$correlation\n        \n        PATH16<-path.analysis(cor.x,cor.y)\n        COR.T<-correlation(data16[,-c(which(name16==\"Genotype\"))])\n        \n        N16<-paste(\"Path Analysis: \",input$name.16)\n        LISTA<-list(PATH16,COR.T)\n        names(LISTA)<-c(N16,\"Traits Correlation\")\n        \n        return(LISTA)\n      })\n      \n      \n      output$contents16.2<- renderPrint({\n        \n        if(input$info.162!=TRUE){\n          \n          switch(input$res.16.2,\n                 \"Path Analysis\"= out.16.1()[[1]],\n                 \"Traits Correlation\"= out.16.1()[[2]])\n        }\n        \n        else \n          \n          includeScript(\"BeBreederDataPathAnalyse.txt\")\n      })\n      \n      \n      output$downloadData16 <- downloadHandler(\n        filename = function() { \n          paste(input$name.txt.16,'.txt',sep=\"\") \n        },\n        content = function(file) {\n          write.table(capture.output(out.16.1()), file, sep=\"\\t\")\n        }\n      )\n      \n# ##############################################################################################################################################################################\n      # SubItem 17\n      \n      out.17.0 <- reactive({\n        \n        if(input$ex.17!=FALSE){\n          TABE17<-read.table(\"ex17.dat\",header = TRUE, sep = \"\\t\")\n        }\n        else{\n          inFile17 <- input$file17\n          \n          if (is.null(inFile17))\n            return(NULL)\n          \n          TABE17<-read.table(inFile17$datapath, header=input$header17, sep=input$sep17,\n                             quote=input$quote17)\n        }\n        \n        rownames(TABE17)<-TABE17$Genotype\n        name.17<-names(TABE17)\n        \n        TABE17.1<-TABE17[,-(which(name.17==\"Genotype\"))]\n        \n        return(TABE17.1)\n      })\n      \n      output$contents171 <- renderPrint({\n        \n        if(input$info.171!=TRUE)\n          \n          return (out.17.0())\n        \n        else \n          \n          includeScript(\"BeBreederbiplot.txt\")\n        \n      })\n      \n      \n     out.17.1<-reactive({\n      \n      if(is.null(out.17.0()))\n        \n        return(NULL)\n      \n      data17<-as.matrix(out.17.0())\n\n      SUMMARY<- summary(prcomp(data17,scale = TRUE))\n      SCORES.GEN<- summary(prcomp(data17,scale = TRUE))$x\n      SCORES.ENV<- summary(prcomp(data17,scale = TRUE))$rotation\n      \n      LIST.17<-list(SUMMARY,SCORES.GEN,SCORES.ENV)\n      return(LIST.17)\n      \n    })\n    \n    output$contents173<- renderPlot({\n      \n      if(is.null(out.17.0()))\n        \n        return(NULL)\n      \n      data17<-as.matrix(out.17.0())\n      name17<-colnames(data17)\n      \n      CP<-(summary(prcomp(data17,scale = TRUE))[[1]])^2\n      CP1<-paste(\"PC 1 (\",(round(CP[1]/sum(CP),3))*100,\"%\",\")\", sep=\"\")\n      CP2<-paste(\"PC 2 (\",(round(CP[2]/sum(CP),3))*100,\"%\",\")\", sep=\"\")\n      \n      biplot(prcomp(data17,scale = TRUE),\n             ylab=CP2,xlab=CP1)\n      abline(v=0,h=0)\n      \n    })\n    \n    out.17.3<-reactive({\n      \n      switch(input$res.172,\n             \"Summary\"= out.17.1()[[1]],\n             \"Scores of G\"= out.17.1()[[2]],\n             \"Scores of E\"= out.17.1()[[3]])\n      \n    })\n      \n      \n      \n      output$contents172<- renderPrint({\n        \n        if(input$info.172!=TRUE)\n          \n          return(out.17.3())\n        \n        else \n          \n          includeScript(\"BeBreederbiplot.txt\")\n      })\n      \n      \n      output$downloadData172 <- downloadHandler(\n        filename = function() { \n          paste(input$name.txt.172,'.txt',sep=\"\") \n        },\n        content = function(file) {\n          write.table(capture.output(out.17.3()), file, sep=\"\\t\")\n        }\n      )\n      \n# #####################################################################################################################################################################################\n      # Sub.174\n\n\n      out.174.1<-reactive({\n        if(is.null(out.17.0()))\n          return(NULL)\n        mydata <- na.omit(out.17.0()) \n        mydata <- scale(mydata)\n        \n        return(mydata)\n      })\n      \n      out.174.00<-reactive({\n      \n        if(is.null(out.17.0()))\n          return(NULL)\n        \n        mydata<-out.174.1()\n        \n        set.seed(0001)\n        fit <- kmeans(mydata, input$num.174)\n        set.seed(0002)\n        d <- dist(mydata, method = \"euclidean\")\n        set.seed(0003)\n        fit2 <- hclust(d, method=\"ward\")\n        set.seed(0004)\n        groups <- cutree(fit2, k=input$num.174)\n        set.seed(0005)\n        mydata2 <- data.frame(mydata, fit$cluster)\n        \n        if(input$summary.174==\"Cluster information\"){\n          return(fit)\n        }\n        if(input$summary.174==\"Genotype groups\"){\n          return(mydata2)\n        }\n        if(input$summary.174==\"Cluster mean\"){\n          return(aggregate(mydata,by=list(fit$cluster),FUN=mean))\n        }\n  \n      })\n      \n      output$contents174<-renderPrint({\n        \n        if(is.null(out.17.0()))\n          return(NULL)\n        \n        out.174.00()\n      })\n      \n      output$downloadData174 <- downloadHandler(\n        filename = function() { \n          paste(input$name.txt.174,'.txt',sep=\"\") \n        },\n        content = function(file) {\n          write.table(capture.output(out.174.00()), file, sep=\"\\t\")\n        }\n      )\n      \n\n      output$contents175<-renderPlot({\n        \n        if(is.null(out.17.0()))\n          return(NULL)\n        \n        mydata<-out.174.1()\n        set.seed(0001)\n        fit <- kmeans(mydata, input$num.175)\n        set.seed(0002)\n        d <- dist(mydata, method = \"euclidean\")\n        set.seed(0003)\n        fit2 <- hclust(d, method=\"ward\")\n        set.seed(0004)\n        groups <- cutree(fit2, k=input$num.175)\n        \n        # switch(input$res.175,\n        #        \"Ward Hierarchical Clustering\"={\n        #          if(input$sel.175!=FALSE){\n        #            plot(fit2,xlab=\"Distance\")\n        #            rect.hclust(fit2, k=input$num.175, border=\"red\")\n        #          }\n        #          if(input$sel.175==FALSE){\n        #            plot(fit2,xlab=\"Distance\")\n        #          }\n        #        }, \n        #        \"Biplot analysis by Cluster\"={\n        #          plotcluster(mydata, fit$cluster)\n        #        }, \n        #        \"Biplot analysis by Genotype\"={\n        #          clusplot(mydata, fit$cluster, color=TRUE, shade=TRUE, \n        #                   labels=2, lines=0)\n        #        })\n        \n        if(input$sel.175!=FALSE){\n        plot(fit2,xlab=\"Distance\")\n        rect.hclust(fit2, k=input$num.175, border=\"red\")\n        }\n        if(input$sel.175==FALSE){\n          plot(fit2,xlab=\"Distance\")\n        }\n       \n       \n      })\n      \n# #####################################################################################################################################################################################\n      # Molecular Breeding\n      \n# #####################################################################################################################################################################################\n      \n      # Mol121\n      \n      out.mol121.0 <- reactive({\n        \n        if(input$exmol121!=FALSE){\n          #TABEmol121.1 <- read.table(\"data.txt\", header = TRUE, na.strings = \"-\", sep = \"\")\n          \n          TABEmol121.1 <- read.table(\"dupont.txt\", header = TRUE, na.strings = \"-\", sep = \"\")\n          return(TABEmol121.1)}\n        \n        inFilemol121 <- input$filemol121\n        \n        if (is.null(inFilemol121))\n          return(NULL)\n        \n        TABEmol121<-read.table(inFilemol121$datapath, header=input$headermol121, sep=input$sepmol121,\n                              quote=input$quotemol121, na.strings =input$na.stringsmol121)\n        \n        #TABEmol121 <- fread(inFilemol121$datapath, data.table=FALSE)\n\n        return(TABEmol121)\n      })\n      \n      output$contentsmol121 <- renderPrint({\n        \n        if(input$info.mol121!=TRUE)\n          \n          return (out.mol121.0())\n        \n        else \n          \n          includeScript(\"BeBreederMol12.txt\")\n        \n      })\n      \n# #####################################################################################################################################################################################\n      \n      # Mol1212\n      \n      out.mol1212.0 <- reactive({\n        \n        if(input$exmol1212!=FALSE){\n          TABEmol1212.1 <- read.table(\"hapmap.txt\", header = TRUE, na.strings = \"-\", sep = \"\")\n          return(TABEmol1212.1)}\n        \n        inFilemol1212 <- input$filemol1212\n        \n        if (is.null(inFilemol1212))\n          return(NULL)\n        \n        TABEmol1212<-read.table(inFilemol1212$datapath, header=input$headermol1212, sep=input$sepmol1212,\n                               quote=input$quotemol1212, na.strings =input$na.stringsmol1212)\n        \n        return(TABEmol1212)\n      })\n      \n      output$contentsmol1212 <- renderPrint({\n        \n        if(input$info.mol1212!=TRUE)\n          \n          return (out.mol1212.0())\n        \n        else \n          \n          includeScript(\"BeBreederMol12.txt\")\n        \n      })\n      \n# #####################################################################################################################################################################################\n      \n      # Mol122\n      \n      out.mol122<-reactive({\n        \n        if (is.null(out.mol121.0()))\n          return(NULL)\n        \n        Z<-out.mol121.0()\n        hap<- out.mol1212.0()\n        \n        if(is.null(hap)){\n        \n        out.1.mol11<-reactive({\n          \n          if(input$res7.mol122){\n            x<-raw.data(as.matrix(Z), frame=input$res5.mol122, input=input$res4.mol122, sweep.sample =input$res3.mol122 , call.rate =input$res2.mol122 , maf=input$res1.mol122, outfile =input$res6.mol122)\n            return(x)\n          }\n        })}\n        \n        if(!is.null(hap)){\n        \n        out.1.mol11<-reactive({\n          \n          if(input$res7.mol122){\n            x<-raw.data(as.matrix(Z), frame=input$res5.mol122, input=input$res4.mol122, sweep.sample =input$res3.mol122 , call.rate =input$res2.mol122 , maf=input$res1.mol122, outfile =input$res6.mol122, hapmap = hap )\n            return(x)\n          }\n        })}\n        \n        X <- out.1.mol11()\n        \n        return(X)\n      })\n      \n      out.Mol122.End <- reactive({\n\n        if (is.null(out.mol122()))\n          return(NULL)\n        \n        x<-out.mol122()\n\n          switch(input$res8.mol122,\n                 \"M.clean\"=x$M.clean, \n                 \"Hapmap\"=x$Hapmap, \n                 \"Report\"=x$report)\n\n      })\n      \n      output$contentsmol122 <- renderPrint({\n        \n        if(input$info.mol122!=TRUE)\n          \n          return (out.Mol122.End())\n        \n        else \n          \n          includeScript(\"BeBreederMol12.txt\")\n      })\n      \n      output$downloadDatamol122 <- downloadHandler(\n        filename = function() { \n          paste(input$name.txt.mol122,'.txt',sep=\"\") \n        },\n        content = function(file) {\n          write.table(capture.output(out.Mol122.End()), file, sep=\"\\t\")\n        }\n      )\n# #####################################################################################################################################################################################\n      \n      # Mol241\n      \n      out.mol241.0 <- reactive({\n        \n        if(input$exmol241!=FALSE){\n          TABEmol241.1<-read.table(\"exMol241.txt\",header = TRUE, sep = \"\\t\")\n          return(TABEmol241.1)}\n        \n        inFilemol241 <- input$filemol241\n        \n        if (is.null(inFilemol241))\n          return(NULL)\n        \n        TABEmol241<-read.table(inFilemol241$datapath, header=input$headermol241, sep=input$sepmol241,\n                              quote=input$quotemol241)\n        \n        return(as.data.frame(TABEmol241))\n      })\n      \n      output$contentsmol241 <- renderPrint({\n        \n        if(input$info.mol241!=TRUE)\n          \n          return (out.mol241.0())\n        \n        else\n          \n          includeScript(\"BeBreederMol24.txt\")\n        \n      })   \n      \n# #####################################################################################################################################################################################\n      \n      # Mol242\n      \n      out.mol242.0 <- reactive({\n        \n        if(input$exmol242!=FALSE){\n          TABEmol242.1<-read.table(\"exMol242.txt\",header = TRUE, sep = \"\\t\")\n          return(TABEmol242.1)}\n        \n        inFilemol242 <- input$filemol242\n        \n        if (is.null(inFilemol242))\n          return(NULL)\n        \n        TABEmol242<-read.table(inFilemol242$datapath, header=input$headermol242, sep=input$sepmol242,\n                               quote=input$quotemol242)\n        \n        return(as.data.frame(TABEmol242))\n      })\n      \n      output$contentsmol242 <- renderPrint({\n        \n        if(input$info.mol242!=TRUE)\n          \n          return (out.mol242.0())\n        \n        else\n          \n          includeScript(\"BeBreederMol24.txt\")\n        \n      })\n# #####################################################################################################################################################################################\n      \n      # Mol1243\n      \n      out.mol243<-reactive({\n        \n        if (is.null(out.mol241.0()))\n          return(NULL)\n        \n        if (is.null(out.mol242.0()))\n          return(NULL)\n        \n        Z<-out.mol242.0()\n        B<-out.mol241.0()\n        \n        Gen<-Z$Genotype\n        Mar<-Z[,-(which(colnames(Z)==\"Genotype\"))]\n        rownames(Mar)<-Gen\n        efec<-B$Effect\n        \n        Mar2<-Mar[,colnames(Mar)%in%as.character(B$Marker)]\n        \n        Mar3<-Mar2[,match(colnames(Mar2),as.character(B$Marker))]\n        \n        Predit<-as.matrix(Mar3)%*%as.matrix(efec)\n        \n        SEL<-as.matrix(Predit[order(Predit,decreasing = T),])\n        \n        GS.SEL<-as.matrix(SEL[1:round((dim(SEL)[1])*input$res.mol243/100,0),])\n        \n        colnames(GS.SEL)<-\"Genotype\"\n        \n        return(GS.SEL)\n        \n      })\n      \n      output$contentsmol243 <- renderPrint({\n        out.mol243()\n      })\n      \n      output$downloadDatamol243 <- downloadHandler(\n        filename = function() { \n          paste(input$name.txt.mol243,'.txt',sep=\"\") \n        },\n        content = function(file) {\n          write.table(capture.output(out.mol243()), file, sep=\"\\t\",col.names = F,row.names = F)\n        }\n      )\n      \n          \n# #####################################################################################################################################################################################\n      \n      # Mol11\n      \n      out.mol11.0 <- reactive({\n        \n        if(input$exmol11!=FALSE){\n          TABEmol11.1 <- fread(\"exMol11.txt\", data.table=FALSE)\n          rownames(TABEmol11.1) <- TABEmol11.1[,1]\n          TABEmol11.1 <- as.matrix(TABEmol11.1[,-1])\n          #TABEmol11.1<-read.table(\"exMol11.dat\",header = TRUE, sep = \"\\t\")\n          return(as.data.frame(TABEmol11.1))}\n        \n        inFilemol11 <- input$filemol11\n        \n        if (is.null(inFilemol11))\n          return(NULL)\n        \n        TABEmol11<-read.table(inFilemol11$datapath, header=input$headermol11, sep=input$sepmol11,\n                              quote=input$quotemol11)\n        \n        #TABEmol11 <- fread(inFilemol11$datapath, data.table=FALSE)\n        rownames(TABEmol11) <- TABEmol11[,1]\n        TABEmol11 <- as.matrix(TABEmol11[,-1])\n        \n        return(as.data.frame(TABEmol11))\n      })\n      \n      output$contentsmol11 <- renderPrint({\n        \n        if(input$info.mol11!=TRUE)\n          \n          return (out.mol11.0())\n        \n        else \n          \n          includeScript(\"BeBreederMol13.txt\")\n        \n      })\n      \n# #####################################################################################################################################################################################\n      # Mol13 \n      \n      output$res3.mol13 <- renderUI({\n        if(input$res1.mol13==\"VanRaden\"){\n          selectInput(\"res4.mol13\",\"Choose Results:\",\n                      choices = c(\"G.additive\",\n                                  \"G.dominant\"))\n        }\n      })\n      \n      out.mol13<-reactive({\n        \n        if (is.null(out.mol11.0()))\n          return(NULL)\n        \n        Z<-as.matrix(out.mol11.0())\n        \n        out.1.mol11<-reactive({\n          \n          if(input$res5.mol13){\n            x<-G.matrix(Z, method=input$res1.mol13, format =input$res2.mol13)\n          return(x)\n            }\n        })\n        \n        X <- out.1.mol11()\n          \n        return(X)\n      })\n      \n      out.Mol13.End <- reactive({\n\n        x<-out.mol13()\n        \n        if(input$res1.mol13==\"VanRaden\"){\n        switch(input$res4.mol13,\n               \"G.additive\"={a<-x$Ga},\n               \"G.dominant\"={a<-x$Gd})\n          return(a)\n          }\n        if(input$res1.mol13!=\"VanRaden\"){\n          return (x)}\n      })\n      \n      output$contentsmol13 <- renderPrint({\n        \n        if(input$info.mol13!=TRUE)\n          \n          return (out.Mol13.End())\n        \n        else \n          \n          includeScript(\"BeBreederMol13.txt\")\n      })\n      \n      output$downloadDatamol13 <- downloadHandler(\n        filename = function() { \n          paste(input$name.txt.mol13,'.txt',sep=\"\") \n        },\n        content = function(file) {\n          write.table(capture.output(out.Mol13.End()), file, sep=\"\\t\")\n        }\n      )\n      \n# #####################################################################################################################################################################################\n      # Mol21\n      \n      out.mol21.0 <- reactive({\n\n        if(input$exmol21!=FALSE){\n          #load(\"exMol21.dat\")\n          TABEmol21.1<-read.table(\"R.dat\",header = TRUE, sep = \"\\t\")\n          return(TABEmol21.1)}\n\n        inFilemol21 <- input$filemol21\n\n        if (is.null(inFilemol21))\n          return(NULL)\n\n        TABEmol21<-read.table(inFilemol21$datapath, header=input$headermol21, sep=input$sepmol21,\n                              quote=input$quotemol21)\n\n        return(as.data.frame(TABEmol21))\n      })\n\n      output$contentsmol21 <- renderPrint({\n\n        if(input$info.mol21!=TRUE)\n\n          return (out.mol21.0())\n\n        else\n\n          includeScript(\"BeBreederMol21.txt\")\n\n      })\n      \n# #####################################################################################################################################################################################\n      \n      # Mol22\n      \n      out.mol22.0 <- reactive({\n\n        if(input$exmol22!=FALSE){\n          #load(\"exMol22.dat\")\n          TABEmol22.1<-read.table(\"M1.dat\",header = TRUE, sep = \"\\t\")\n          return(TABEmol22.1)}\n\n        inFilemol22 <- input$filemol22\n\n        if (is.null(inFilemol22))\n          return(NULL)\n\n        TABEmol22<-read.table(inFilemol22$datapath, header=input$headermol22, sep=input$sepmol22,\n                              quote=input$quotemol22)\n\n        return(as.data.frame(TABEmol22))\n      })\n\n      output$contentsmol22 <- renderPrint({\n\n        if(input$info.mol22!=TRUE)\n\n          return (out.mol22.0())\n\n        else\n\n          includeScript(\"BeBreederMol21.txt\")\n\n      })\n\n######################################################################################################################################################################################\n      \n      # Mol23 \n      \n      out.mol23<-reactive({\n        \n        if(is.null(out.mol21.0()))\n          \n          return(NULL)\n        \n        if(is.null(out.mol22.0()))\n          \n          return(NULL)\n\n        B<-out.mol21.0()\n        Z<-out.mol22.0()\n        \n        Gen<-Z[,colnames(Z)==\"Genotype\"]\n        Mar<-Z[,-(which(colnames(Z)==\"Genotype\"))]\n        Gen2<-B[,colnames(B)==\"Genotype\"]\n        y<-as.matrix(B[,-(which(colnames(B)==\"Genotype\"))])\n        \n        Mar2<-Mar[Gen%in%as.character(Gen2),]\n        \n        M<-Mar2[match(Gen,as.character(Gen2)),]\n        \n        y<-as.matrix(as.numeric(as.character(y)))\n        rownames(y)<-Gen2\n        \n        M<-apply(M, 2,function(x) as.numeric(as.character(x)))\n        rownames(Mar)<-Gen\n        \n        ans1 <- mixed.solve(y,Z=M)\n        ans2 <- mixed.solve(y,K=A.mat(M))\n        accuracy <- cor(y,ans2$u)\n        \n        Y.est<-as.matrix(ans2$u)\n        rownames(Y.est)<-Gen2\n        \n        switch(input$res.mol23,\n               \"Marker effects\"= ans1$u,\n               \"Breeding values\"= Y.est,\n               \"Accuracy\"= accuracy)\n        \n      })\n      \n     output$contentsmol23<-renderPrint({\n       \n      # if(input$info.mol23!=TRUE)\n         \n         return (out.mol23())\n       \n       # else\n       #   \n       #   includeScript(\"BeBreederMol21.txt\")\n      })\n        \n      output$downloadDatamol23 <- downloadHandler(\n        filename = function() { \n          paste(input$name.txt.mol23,'.txt',sep=\"\") \n        },\n        content = function(file) {\n          write.table(capture.output(out.mol23()), file, sep=\"\\t\")\n        }\n      )\n        \n# #####################################################################################################################################################################################\n      \n      # Mol31\n      \n      out.mol31.0 <- reactive({\n        \n        if(input$exmol31!=FALSE){\n          load(\"exMol31.dat\")\n          #TABEmol31.1<-read.table(\"exMol31.dat\",header = TRUE, sep = \"\\t\")\n          return(as.data.frame(TABEmol31.1))}\n        \n        inFilemol31 <- input$filemol31\n        \n        if (is.null(inFilemol31))\n          return(NULL)\n        \n        TABEmol31<-read.table(inFilemol31$datapath, header=input$headermol31, sep=input$sepmol31, \n                           quote=input$quotemol31)\n        \n        return(as.data.frame(TABEmol31))\n      })\n      \n      output$contentsmol31 <- renderPrint({\n        \n        if(input$info.mol31!=TRUE)\n          \n          return (out.mol31.0())\n        \n        else \n          \n          includeScript(\"BeBreederMol3.txt\")\n        \n      })\n      \n# #####################################################################################################################################################################################\n      \n      # Mol32\n      \n      out.mol32.0 <- reactive({\n        \n        if(input$exmol32!=FALSE){\n          load(\"exMol32.dat\")\n          #TABEmol32.1<-read.table(\"exMol32.dat\",header = TRUE, sep = \"\\t\")\n          return(as.data.frame(TABEmol32.1))}\n        \n        inFilemol32 <- input$filemol32\n        \n        if (is.null(inFilemol32))\n          return(NULL)\n        \n        TABEmol32<-read.table(inFilemol32$datapath, header=input$headermol32, sep=input$sepmol32, \n                              quote=input$quotemol32)\n        \n        return(as.data.frame(TABEmol32))\n      })\n      \n      output$contentsmol32 <- renderPrint({\n        \n        if(input$info.mol32!=TRUE)\n          \n          return (out.mol32.0())\n        \n        else \n          \n          includeScript(\"BeBreederMol3.txt\")\n        \n      })\n      \n# #####################################################################################################################################################################################\n      \n      # Mol33  \n      \n      out.mol33<-reactive({\n        \n        if(is.null(out.mol31.0()))\n          \n          return(NULL)\n        \n        if(is.null(out.mol32.0()))\n          \n          return(NULL)\n        \n        pheno<-out.mol31.0()\n        geno<-out.mol32.0()\n        \n        scores <- GWAS(pheno,geno,plot=F)\n        \n        return(scores)\n      })\n      \n\n      output$contentsmol33.1<-renderPrint({\n        \n        if(is.null(out.mol33()))\n          \n          return(NULL)\n\n        out.mol33()\n        \n      })\n      \n      output$contentsmol33.2<-renderPlot({\n        \n        if(is.null(out.mol33()))\n          \n          return(NULL)\n        \n        scores<-out.mol33()\n        \n        Xpos<-list()\n        for(i in 1:length(unique(scores$chrom))){\n          cr<-subset(scores,chrom==i)\n          pcr<-dim(cr)[1]/2\n          Xpos[[i]]<-cr$pos==pcr\n        }\n        \n        plot(abs(scores$y),col=scores$chrom, xlab =\"Chromosomes\",ylab = \"-log10(p)\",xaxt='n',pch=19)\n        axis(side=1, at=which(unlist(Xpos)==TRUE), labels=c(labels=unique(scores$chrom)))\n        abline(h=input$LOD, col = 2)\n\n      })\n      \n      output$downloadDatamol33 <- downloadHandler(\n        filename = function() { \n          paste(input$name.txt.mol33,'.txt',sep=\"\") \n        },\n        content = function(file) {\n          write.table(capture.output(out.mol33()), file, sep=\"\\t\")\n        }\n      )\n# #####################################################################################################################################################################################\n      \n      # Mol41\n      \n      out.mol41.0 <- reactive({\n        \n        if(input$exmol41!=FALSE){\n          \n          if(input$res.mol41==\"Structure\"){\n            a= read.table(\"SSR.str\") \n            n=nrow(a)\n            popn=length(levels(a[,2]))\n            c=(ncol(a)-2)/2\n            \n            TABEmol41.1=read.structure(\"SSR.str\", n.ind = n, n.loc = c, col.lab = 1, col.pop = 2, onerowperind = T, row.marknames = 0, col.others = 0)\n          }\n          \n          if(input$res.mol41==\"Genpop\"){\n            TABEmol41.1=read.genepop(\"SNP.gen\") }\n          \n          return(TABEmol41.1)}\n        \n        inFilemol41 <- input$filemol41\n        \n        if (is.null(inFilemol41))\n          return(NULL)\n        \n        if(input$res.mol41==\"Structure\"){\n          a<-read.table(inFilemol41$datapath)\n          \n          n=nrow(a)\n          c=(ncol(a)-2)/2\n          \n          ale.name<-runif(1)\n          \n          write.table(a,paste(ale.name,\".str\",sep = \"\"),col.names = FALSE,row.names = FALSE,quote = FALSE)\n          \n          TABEmol41=read.structure(paste(ale.name,\".str\",sep = \"\"), n.ind = n, n.loc = c, col.lab = 1, col.pop = 2, onerowperind = T, row.marknames = 0, col.others = 0)\n          \n          file.remove(paste(ale.name,\".str\",sep = \"\"))\n          rm(a,n, c, ale.name)\n        }\n        \n        if(input$res.mol41==\"Genpop\"){\n          b<-read.table(inFilemol41$datapath,sep=\"?\")\n          ale.name2<-runif(1)\n          \n          write.table(b,paste(ale.name2,\".gen\",sep = \"\"),col.names = FALSE,row.names = FALSE,quote = FALSE)\n          \n          TABEmol41=read.genepop(paste(ale.name2,\".gen\",sep = \"\"))\n        \n        file.remove(paste(ale.name2,\".gen\",sep = \"\"))\n        rm(b,ale.name2)\n      }\n        return(TABEmol41)\n      })\n      \n      out.mol.end.41<-reactive({\n        \n        if (is.null(out.mol41.0()))\n          return(NULL)\n        \n          as.data.frame(out.mol41.0())\n      \n      })\n      \n      output$contentsmol41 <- renderPrint({\n        \n        if(input$info.mol41!=TRUE)\n          \n          return (out.mol.end.41())\n        \n        else \n          \n          includeScript(\"BeBreederMol4.txt\")\n        \n      })\n      \n# #####################################################################################################################################################################################      \n      \n      \n      out.mol42<-reactive({\n        if (is.null(out.mol41.0()))\n          return(NULL)\n        \n        obj<-out.mol41.0()\n        \n        switch(input$res.mol42,\n               \"Summary\"= {\n                 sum<-summary(obj)\n                 S<-list(\"Number of individuals:\"= sum$n,\n                         \"Group sizes:\"= sum$n.by.pop,\n                         \"Number of alleles per loci:\"= sum$loc.n.all,\n                         \"Number of alleles per group:\"= sum$pop.n.all,\n                         \"Percentage of missing data:\"= sum$NA.perc,\n                         \"Observed heterozygosity:\"= sum$Hobs,\n                         \"Expected heterozygosity:\"= sum$Hexp)\n                 return(S)\n               },\n               \"Expected heterozygosity\"= Hs(obj)\n               # ,\n               # \"Alleles report\"={\n               #   alleles=allele.dist(obj, mk.figures = FALSE)\n               #   return(alleles$private.alleles)\n               # }\n               )\n      })\n      \n       output$contentsmol42 <- renderPrint({\n        \n         out.mol42()\n         \n      })\n      \n      output$downloadDatamol42 <- downloadHandler(\n        filename = function() {\n          paste(input$name.txt.mol42,'.txt',sep=\"\")\n        },\n        content = function(file) {\n          write.table(capture.output(out.mol42()), file, sep=\"\\t\")\n        }\n      )\n# #####################################################################################################################################################################################      \n      \n      output$ui.mol43 <- renderUI({\n      if(input$res.mol43==\"Principal component analysis by population 1\"){\n        textInput(\"title.mol43\",\"Main Title:\")\n      }\n      })\n      \n      output$ui.mol43.2 <- renderUI({\n        if(input$res.mol43==\"Population Structure\"){\n          textInput(\"name.txt.mol44\",\"Type the File Name\")\n        }\n      })\n      output$ui.mol43.3 <- renderUI({\n        if(input$res.mol43==\"Population Structure\"){\n          downloadButton('downloadDatamol44', 'Download')\n        }\n      })\n      output$ui.mol43.4 <- renderUI({\n        if(input$res.mol43==\"Principal component analysis by population 1\"){\n          numericInput(\"res4.mol43\", \"Label size:\",min = 0,max = 5,value = 0.8,step = 0.1)\n        }\n      })\n      \n      output$contentsmol43 <- renderPlot({\n        \n        if (is.null(out.mol41.0()))\n          return(NULL)\n        \n        obj<-out.mol41.0()\n        sum=summary(obj)\n        He=Hs(obj)\n        X <- scaleGen(obj, NA.method=\"mean\")\n        pca1 <- dudi.pca(X,cent=FALSE,scale=FALSE,scannf=FALSE,nf=4)\n        popn<-length(unique(obj$pop))\n        \n        add_legend <- function(...) {\n          opar <- par(fig=c(0, 1, 0, 1), oma=c(0, 0, 0, 0), \n                      mar=c(0, 0, 0, 0), new=TRUE)\n          on.exit(par(opar))\n          plot(0, 0, type='n', bty='n', xaxt='n', yaxt='n')\n          legend(...)}\n        \n         switch(input$res.mol43,\n               \"Number of alleles per loci\"={barplot(obj$loc.n.all, ylab=\"Number of alleles per loci\")},\n               \"Expected Heterozygosity per loci\"={barplot(sum$Hexp, main=\"Expected Heterozygosity per loci\", ylab=\"He\", xlab=\"Loci\")},\n               \"Expected Heterozygosity per population\"={barplot(He, main=\"Expected Heterozygosity per population\", ylab=\"He\", xlab=\"Population\")},\n               \"Observed Heterozygosity per loci\"={barplot(sum$Hobs, main=\"Observed Heterozygosity per loci\", ylab=\"Ho\", xlab=\"Loci\")},\n               \"Heterozygosity: expected-observed\"={barplot(sum$Hexp-sum$Hobs, main=\"Heterozygosity: expected-observed\", ylab=\"Hexp - Hobs\")},\n               \"F index:  F = (He - Ho)/He\"={barplot(sum$Hexp-sum$Hobs/sum$Hexp, main=\"F index:  F = (He - Ho)/He\", ylab= \"F\")},\n               \"Population sample size\"={\n                 barplot(sum$n.by.pop, main=\"Population sample size\", ylab=\"Number of genotypes\",las=3)\n                 },\n               \"Principal component analysis by population 1\"={\n               #barplot(pca1$eig[1:50],main=\"PCA eigenvalues\", col=heat.colors(50))\n               s.class(pca1$li, obj$pop,xax=1,yax=2, col=rainbow(popn, alpha = 1), axesell=FALSE, pch=19, grid=FALSE, cellipse=0, clabel=input$res4.mol43, cstar=0, addaxes=1)\n               title(input$title.mol43)\n               add.scatter.eig(pca1$eig, 3,1,2)\n               },\n               \"Principal component analysis by individual\"={\n                 s.label(pca1$li, sub=\"CA 1-2\",cpoint=\"\", boxes=F, clabel=0.7)},\n               \"Dendrogram by individual\"={dist <- aboot(obj, tree=\"upgma\", dist = nei.dist, missing=\"mean\", sample = 100, cutoff = 0)},\n               \"Dendrogram by population\"={\n                 obj_pop=genind2genpop(obj)\n                 dist_pop <- aboot(obj_pop, tree=\"upgma\", dist = rogers.dist, sample = 10, cutoff = 50)\n               },\n               \"Principal component analysis by population 2\"={\n                 obj_pop=genind2genpop(obj)\n                 X <- scaleGen(obj_pop, NA.method=\"mean\")\n                 pca1 <- dudi.pca(X,cent=FALSE,scale=FALSE,scannf=FALSE,nf=4)\n                 s.label(pca1$li, sub=\"CA 1-2\",cpoint=\"\", boxes=T, clabel=1)\n               },\n               # \"Number of PCs\"={\n               #   dapc1 <- dapc(obj, n.da=100, n.pca=nrow(obj@tab)/3)\n               #   temp <- optim.a.score(dapc1)\n               # },\n               \"Population Structure\"={\n                 dapc1 <- dapc(obj, n.da=100, n.pca=nrow(obj@tab)/3)\n                 temp <- optim.a.score(dapc1)\n                 dapc2 <- dapc(obj, n.da=100, n.pca=temp$best)\n                 compoplot(dapc2, lab=\"\", posi=list(x=12,y=-.01), cleg=.7)\n                 output$downloadDatamol44 <- downloadHandler(\n                   filename = function() {\n                     paste(input$name.txt.mol44,'.txt',sep=\"\")\n                   },\n                   content = function(file) {\n                     write.table(capture.output(dapc2$posterior), file, sep=\"\\t\",row.names = FALSE,col.names = FALSE)\n                   }\n                 )\n               },\n               \"Neighbor joining dendrogram\"={\n                 X <- scaleGen(obj, NA.method=\"mean\")\n                 D <- dist(X)\n                 tre <- nj(D)\n                 myCol=rainbow(popn)[as.integer(pop(obj))]\n                 plot(tre, type = \"unr\", show.tip.lab = FALSE)\n                 tiplabels(col = myCol, pch = 20)\n                 add_legend(\"topright\", legend=unique(obj$pop), pch=20, \n                            col=unique(myCol),\n                            horiz=FALSE, bty='n', cex=0.8)\n         })\n        \n      }) \n\n# #####################################################################################################################################################################################      \n # Mol51\n      out.mol51<-reactive({ \n        \n        if(input$exmol51!=FALSE){\n          TAB.mol51.1<-read.table(\"PS.txt\",header = T)\n          # row.names(TAB.mol51.1)<-TAB.mol51.1[,1]\n          # TAB.mol51.2<-TAB.mol51.1[,-1]\n          return(TAB.mol51.1)}\n        \n        inFilemol51 <- input$filemol51\n        \n        if (is.null(inFilemol51))\n          return(NULL)\n        \n        \n        TAB.mol51.0<-read.table(inFilemol51$datapath, header=input$headermol51, sep=input$sepmol51, \n                           quote=input$quotemol51)\n        # row.names(TAB.mol51.0)<-TAB.mol51.0[,1]\n        # TAB.mol51<-TAB.mol51.0[,-1]\n        \n        return(TAB.mol51.0)\n        \n      })\n      \n      output$contentsmol51 <- renderPrint({\n        \n\n        \n        if(input$info.mol51!=TRUE){\n          \n          if (is.null(out.mol51())){\n            return(NULL)}\n          return (as.data.frame(out.mol51()))\n        }\n          \n          else \n          \n          includeScript(\"BeBreederMol5.txt\")\n        \n      })\n# #####################################################################################################################################################################################      \n # Mol52\n      out.mol52<-reactive({ \n        \n        if(input$exmol52!=FALSE){\n          TAB.mol52.1<-read.table(\"Z.txt\")\n\n          return(TAB.mol52.1)}\n        \n        inFilemol52 <- input$filemol52\n        \n        if (is.null(inFilemol52))\n          return(NULL)\n        \n        \n        TAB.mol52<-read.table(inFilemol52$datapath, header=input$headermol52, sep=input$sepmol52, \n                                quote=input$quotemol52)\n\n        return(TAB.mol52)\n      })\n      \n      output$contentsmol52 <- renderPrint({\n        \n        if(input$info.mol52!=TRUE)\n          \n          return (out.mol52())\n        \n        else \n          \n          includeScript(\"BeBreederMol5.txt\")\n      })\n# #####################################################################################################################################################################################      \n  # Mol53\n      out.mol53.0<-reactive({\n        \n        if(is.null(out.mol51()))\n          \n          return(NULL)\n        \n        if(is.null(out.mol52()))\n          \n          return(NULL)\n        \n        PS<-out.mol51()\n        row.names(PS)<-PS[,1]\n        PS<-PS[,-1]\n        \n        Z<-out.mol52()\n        \n        a.53<-popgen(subgroups=PS,M=Z)\n        \n        return(a.53)\n      })\n      \n      out.mol53<-reactive({\n        if (is.null(out.mol53.0()))\n          return(NULL)\n        \n        obj.53<-out.mol53.0()\n        \n        switch(input$res.mol53,\n               \"General\"=obj.53$general,\n               \"By Group\"=obj.53$bygroup,\n               \"Exclusive Alleles\"=obj.53$exclusive_alleles,\n               \"Fixed Alleles\"=obj.53$fixed_alleles )\n      })\n      \n      output$contentsmol53 <- renderPrint({\n        \n        if(input$info.mol53!=TRUE)\n          \n          return (out.mol53())\n        \n        else \n          \n          includeScript(\"BeBreederMol5.txt\")\n        \n      })\n      \n      output$downloadDatamol53 <- downloadHandler(\n        filename = function() {\n          paste(input$name.txt.mol53,'.txt',sep=\"\")\n        },\n        content = function(file) {\n          write.table(capture.output(out.mol53()), file, sep=\"\\t\")\n        }\n      )\n# #####################################################################################################################################################################################      \n      \n    }\n    \n    \n  )\n  ",
    "created" : 1508260920062.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "553526101",
    "id" : "C0DC0097",
    "lastKnownWriteTime" : 1508260955,
    "last_content_update" : 1508260955361,
    "path" : "D:/Be-Breeder/Be-Breeder/app.R",
    "project_path" : "app.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}